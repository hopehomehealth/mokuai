<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2016/6/13
 * Time: 11:37
 */
namespace Home\Controller;
use Common\Common\ComController;
class WxpayController extends ComController {
    //初始化
    public function _initialize()
    {
        //引入WxPayPubHelper
       //Vendor('Wxpay.WxPayPubHelper.WxPayPubHelper');
    }
    public function pay(){
        Vendor('Wxpay.WxPayPubHelper.WxPayPubHelper');
        /*微信支付配置信息start*/
        $setting_model = D('setting');
        $set = $setting_model->find();
        $config =array();
        $config['appid'] = $set['appid'];
        $config['mchid'] = $set['partnerid'];
        $config['key'] = $set['paysignkey'];
        $config['appsecret'] = $set['appsecret'];
        /*$config['sslcert_path'] = 'http://lehu.ew9t.cn/ThinkPHP/Library/Vendor/Wxpay/WxPayPubHelper/cacert/apiclient_cert.pem';
        $config['sslkey_path'] = 'http://lehu.ew9t.cn/ThinkPHP/Library/Vendor/Wxpay/WxPayPubHelper/cacert/apiclient_key.pem';*/
        $config['js_api_call_url'] = SITE_URL.'index.php/Home/Wxpay/pay';
        $config['notify_url'] = SITE_URL.'index.php/Home/Wxpay/notify_url';
        /*微信支付配置信息end*/
        if(strlen($_GET['state']) > 5){
            $state = json_decode(json_encode(json_decode($_GET['state'])),true);
            if(!is_array($state)){
                $state = $_GET['state'];
                $state = str_replace('{','{"',$state);
                $state = str_replace(':','":"',$state);
                $state = str_replace('}','"}',$state);
                $state = str_replace(',','","',$state);

                $state = json_decode(trim($state,chr(239).chr(187).chr(191)),true);
            }

            $paytype = $state['type'];
            $id = $state['id'];//这里的id并非数据表里的主键而是定义的一个参数名(它可能是一个订单的id也可能是一个支付的流水号)
        }else{
            $paytype = I("type",0);
            $id = I("id",0);//这里的id并非数据表里的主键而是定义的一个参数名(它可能是一个订单的id也可能是一个支付的流水号)
        }

        /*请求支付参数处理*start*/
        //注册金支付参数
        if($paytype == "reg"){
            $regid = $id;
            $regfee = M('regfee')->find($regid);
            $out_trade_no = '1'.$regfee['reg_sn'];
            $total_fee = $regfee['amount'] * 100;
            $desc = "积分充值";
            //成功后跳转地址
            $return_url = SITE_URL."index.php/Home/User/regfee?restatus=success";

        //申请代理费用支付参数
        }else if($paytype == "agentfee"){
            $agent_id = $id;
            $agentfee = M('agentfee')->find($agent_id);
            $out_trade_no = '2'.$agentfee['agent_sn'];
            $total_fee = $agentfee['amount'] * 100;
            $desc = "代理费";
            //成功后跳转地址
            $return_url = SITE_URL."index.php/Home/User/channel";

        //首付款支付参数
        }else if($paytype == "downpay"){
            $book_id = $id;
            $bookinfo = M('booking')->where("book_id = {$book_id}")->find();
            $out_trade_no = '3'.$bookinfo['book_sn'];

            $total_fee = $bookinfo['downpay'] * 100;
            $goodsinfo = M('haoche')->find($bookinfo['goods_id']);
            $goods_name = $goodsinfo['goods_name'];
            $desc = $goods_name.' '."首付款";
            //成功后跳转地址
            $return_url = SITE_URL."index.php/Home/Booking/bookinfo";


        //订单单个商品支付参数
        }else if($paytype == "orderpay"){
            $orderid = $id;
            $orderinfo = M('order')->where("orderid = {$orderid}")->find();
            $out_trade_no = '4'.$orderinfo['orderno'];
            $total_fee = $orderinfo['downpay'] * 100;
            $goodsinfo = M('goods')->find($orderinfo['goods_id']);
            $desc = $goodsinfo['goods_name'].' '."首付款";
            //成功后跳转地址
            $return_url = SITE_URL."index.php/Home/Order/sending";


        }else if($paytype == "sumpay"){
            $sumid = $id;
            $orderinfo = M('sumorder')->where("sumid = {$sumid}")->find();
            $out_trade_no = '5'.$orderinfo['sum_sn'];
            $total_fee = $orderinfo['total_my'] * 100;
            $goods_name = $orderinfo['goods_name'];
            $desc = $goods_name.' '."首付款";
            //成功后跳转地址
            $return_url = SITE_URL."index.php/Home/Order/sending";

        }else if($paytype == "housepay"){
            $house_id = $id;
            $houseinfo = M('house')->find($house_id);
            $out_trade_no = '6'.$houseinfo['serial_no'];
            $total_fee = $houseinfo['deposit'] * 100;
            $desc = "0元购房申请意向金";
            //成功后跳转地址
            $return_url = SITE_URL."index.php/Home/House/showlist";

        }else if($paytype == "donate"){
            $id = $id;
            $cimoney = M('cimoney')->find($id);
            $out_trade_no = '7'.$cimoney['serial_no'];
            $total_fee = $cimoney['money'] * 100;
            $desc = "捐助金";
            //成功后跳转地址
            $return_url = SITE_URL."index.php/Home/Cishan/index/errormsg/OK";

        }else if($paytype == "banka"){
            $id = $id;
            $banka = M('caiclub')->find($id);
            $out_trade_no = '8'.$banka['serial_sn'];
            $total_fee = $banka['card_fee'] * 100;
            $desc = "办卡定金";
            //成功后跳转地址
            $return_url = SITE_URL."index.php/Home/Caiclub/apply/errormsg/OK1";

        }else if($paytype == "yangka"){
            $id = $id;
            $yangka = M('yangka')->find($id);
            $out_trade_no = '9'.$banka['serial_sn'];
            $total_fee = $yangka['amount'] * 100;
            $desc = "养卡定金";
            //成功后跳转地址
            $return_url = SITE_URL."index.php/Home/Caiclub/apply/errormsg/OK2";

        }else if($paytype == "tie"){
            $id = $id;
            $tie = M('tie')->find($id);
            $out_trade_no = '0'.$tie['serial_sn'];
            $total_fee = $tie['amount'] * 100;
            $desc = "提额定金";
            //成功后跳转地址
            $return_url = SITE_URL."index.php/Home/Caiclub/apply/errormsg/OK3";
        }else if($paytype == "daikuan"){
            $id = $id;
            $daikuan = M('daikuan')->find($id);
            $out_trade_no = 'A'.$daikuan['serial_sn'];
            $total_fee = $daikuan['amount'] * 100;
            $desc = "贷款定金";
            //成功后跳转地址
            $return_url = SITE_URL."index.php/Home/Caiclub/apply/errormsg/OK4";
        }else if($paytype == "vipfee"){
            $bevip = M('bevip')->find($id);
            $out_trade_no = 'B'.$bevip['ordersn'];    
            $total_fee = $bevip['amount'] * 100;
            $desc = "会员缴费";
            //成功后跳转地址
            $return_url = SITE_URL."index.php/Home/user/logout";
        }else if($paytype == "mchfee"){
            $seller = M('seller')->find($id);
            $out_trade_no = 'C'.$seller['ordersn'];
            
            $total_fee = $seller['amount'] * 100;
            $desc = "成为商家缴费";
            //成功后跳转地址
            $return_url = SITE_URL."index.php/Home/user/logout";
        }else if($paytype == 'sorderpay'){
            $sorder = M('sorder')->alias('s')->field("s.*,g.goods_name")->join("hc_sgoods as g on g.goods_id = s.goods_id")->where("orderid = {$id}")->select();
            $out_trade_no = 'D'.$sorder[0]['orderno'];
            $total_fee = $sorder[0]['orderamount'] * 100;
            $desc = $sorder[0]['goods_name'];
            //成功后跳转地址
            $return_url = SITE_URL."index.php/Home/Order/sending";
        }
        /*请求参数处理*end*/


        //echo $out_trade_no;echo $total_fee;exit;
        $jsApi =new \JsApi_pub($config);
        //=========步骤1：网页授权获取用户openid============
        //通过code获得openid
        if(!isset($_GET['code']))
        {
            //触发微信返回code码
            $url = $jsApi->JS_API_CALL_URL;
            $url =$jsApi->createOauthUrlForCode($url);
            $state = json_encode(array(
                "type" => $paytype,
                "id" => $id
            ));
            $url = str_replace("STATE", $state, $url);
            Header("Location: $url");
        }else{
            //获取code码，以获取openid
            $code =$_GET['code'];//echo $code;exit;
            $jsApi->setCode($code);
            $openid =$jsApi->getOpenId();
            //echo $openid;
        }
        //echo $out_trade_no.'-----'.$total_fee.'----'.$desc;

        //$total_fee = 1;
        //=========步骤2：使用统一支付接口，获取prepay_id============
        //使用统一支付接口
        $unifiedOrder =new \UnifiedOrder_pub($config);

        $unifiedOrder->setParameter("openid","{$openid}");//openid
        $unifiedOrder->setParameter("body","{$desc}");//商品描述
        //自定义订单号，此处仅作举例
        //$timeStamp =(string)time();
        //$out_trade_no =$jsApi->APPID."{$timeStamp}";
        $unifiedOrder->setParameter("out_trade_no","{$out_trade_no}");//商户订单号
        $unifiedOrder->setParameter("total_fee","$total_fee");//总金额
        //$unifiedOrder->setParameter("total_fee","1");
        $notify_url =  SITE_URL.'index.php/Home/Wxpay/notify_url';
        //echo $notify_url;exit;
        $unifiedOrder->setParameter("notify_url","$notify_url");//通知地址
        $unifiedOrder->setParameter("trade_type","JSAPI");//交易类型
        $unifiedOrder->setParameter("input_charset", "UTF-8"); //字符编码
        $prepay_id =$unifiedOrder->getPrepayId();
        //=========步骤3：使用jsapi调起支付============
        $jsApi->setPrepayId($prepay_id);
        //echo '111<br/>'.$prepay_id;exit;
        $jsApiParameters =$jsApi->getParameters();
        /*$this->assign("orderinfo",array('ordernumber'=>$orderinfo['ordernumber'],'ssum'=>$total_fee/100));*/
        $daohang = array(
            'second'=>'微信支付',
        );
        $this->assign('daohang',$daohang);
        $this->assign('return_url',$return_url);
        $this->assign("jsApiParameters",$jsApiParameters);
        //dump($jsApiParameters);exit;
        $this->display('regfee');
    }
    /*function notify_url(){
        Vendor('Wxpay.WxPayPubHelper.WxPayPubHelper');
        $notify = new \Notify_pub();
        $xml = $GLOBALS['HTTP_ROW_POST_DATA'];
        $notify -> saveData($xml);
        if($notify ->checkSign() == FALSE){
            $notify -> setReturnParameter("return_code","FAIL");//返回状态码
            $notify -> setReturnParameter("return_msg","签名失败");//返回信息
        }else{
            $notify ->setReturnParameter("return_code","SUCCESS");//设置返回码
        }
        $returnXml = $notify ->returnXml();
         //==商户根据实际情况设置相应的处理流程，此处仅作举例=======

        //以log文件形式记录回调信息
        //$log_ = new Log_();
        //$log_name= SITE_URL."index.php/Public/notify_url.log";//log文件路径

        //log_result($log_name,"【接收到的notify通知】:\n".$xml."\n");
        //下面商户根据实际情况设置相应处理流程
        $parameter = $notify ->xmlToArray($xml);
        if($notify ->checkSign() == TRUE){
            if($notify ->data['return_code'] == "FAIL"){
                //此处应该更新一下订单状态商户自行增删操作
                //通信出错设为无效订单
                //log_result($log_name,"【通信出错】:\n".$xml."\n");
                echo 'error';
            }else if($notify ->data['result_code'] == "FAIL"){
                //此处应该更新一下订单状态商户自行增删操作
                //通信出错设为无效订单
                //log_result($log_name,"【业务出错】:\n".$xml."\n");
                echo 'error';
            }else{
                //没有处理成功，微信会间隔的发送请求
                if ($this->process($parameter)) {
                    //处理成功后输出success，微信就不会再下发请求了
                    echo 'success';
                    //$this->redirect("User/register");
                }else {
                    //没有处理成功，微信会间隔的发送请求
                    echo 'error';

                }
            }
        }
    }*/
    function notify_url() {
        Vendor('Wxpay.WxPayPubHelper.WxPayPubHelper');
        $notify = new \Notify_pub();
        $xml = file_get_contents("php://input");
        $notify -> saveData($xml);
        if($notify ->checkSign() == TRUE){

            $notify -> setReturnParameter("return_code","FAIL");//返回状态码
            $notify -> setReturnParameter("return_msg","签名失败");//返回信息
        }else{

            $notify ->setReturnParameter("return_code","SUCCESS");//设置返回码
        }
        $returnXml = $notify ->returnXml();
         //==商户根据实际情况设置相应的处理流程，此处仅作举例=======

        //以log文件形式记录回调信息
        //$log_ = new Log_();
        //$log_name= SITE_URL."index.php/Public/notify_url.log";//log文件路径

        //log_result($log_name,"【接收到的notify通知】:\n".$xml."\n");
        //下面商户根据实际情况设置相应处理流程
        $parameter = $notify ->xmlToArray($xml);

        if($notify ->checkSign() == FALSE){
            if($notify ->data['return_code'] == "FAIL"){
                //此处应该更新一下订单状态商户自行增删操作
                //通信出错设为无效订单
                //log_result($log_name,"【通信出错】:\n".$xml."\n");

                echo 'error';
            }else if($notify ->data['result_code'] == "FAIL"){
                //此处应该更新一下订单状态商户自行增删操作
                //通信出错设为无效订单
                //log_result($log_name,"【业务出错】:\n".$xml."\n");

                echo 'error';
            }else{

                //没有处理成功，微信会间隔的发送请求
                if ($this->notify_url1($parameter)) {
                    //处理成功后输出success，微信就不会再下发请求了

                    echo 'success';
                    //$this->redirect("User/register");
                }else {

                    //没有处理成功，微信会间隔的发送请求
                    echo 'error';

                }
            }
        }else{
            //fwrite(fopen("./Home/hh.txt",'w'),print_r(66, true));
        }
    }

    function notify_url1($parameter){
        //此处应该更新一下订单的状态，商户自行增删操作
        //返回的数据最少有以下几个
        /*$parameter = array(
          'out_trade_no' =>xxx,//商户订单号
          'total_fee' => xxx,//支付金额
          'openid' => xxx,//付款的用户id
        );*/


        $out_trade_no = $parameter['out_trade_no'];
        $paytype = substr($out_trade_no,0,1);
        $out_trade_no = substr($out_trade_no,1);
        if($paytype == 1){
            $this->reg($out_trade_no);
            return true;
        }else if($paytype == 2){
            $this->agentfee($out_trade_no);
            return true;
        }else if($paytype == 3){
            $this->downpay($out_trade_no);
             return true;
        }else if($paytype == 4){
            $this->orderpay($out_trade_no);
            return true;
        }else if($paytype == 5){
            $this->sumpay($out_trade_no);
            return true;
        }else if($paytype == 6){
            $this->housepay($out_trade_no);
            return true;
        }else if($paytype == 7){
            $this->donate($out_trade_no);
            return true;
        }else if($paytype == 8){
            $this->banka($out_trade_no);
            return true;
        }else if($paytype == 9){
            $this->yangka($out_trade_no);
            return true;
        }else if($paytype == 0){
            $this->tie($out_trade_no);
            return true;
        }else if($paytype == 'A'){
            $this->daikuan($out_trade_no);
            return true;
        }else if($paytype == 'B'){
            $this->vipfee($out_trade_no);
            return true;
        }else if($paytype == 'C'){
            $this->mchfee($out_trade_no);
            return true;
        }else if($paytype == 'D'){
            $this->sorderpay($out_trade_no);
            return true;
        }else{
            return false;
        }
    }
    //充值成功后操作
    private function reg($out_trade_no){
        $reg_sn = $out_trade_no;
        $detail_model = M('userdetail');
        $user_model = M('user');

        $setting_model = M('setting');
        $set = $setting_model->find();
        $regfee_model = M('regfee');
        //fwrite(fopen("./Home/zz.txt",'w'),print_r($reg_sn, true));
        $regfee = $regfee_model->where("reg_sn = '{$reg_sn}'")->select();
        //fwrite(fopen("./Home/zz.txt",'w'),print_r($regfee, true));
        $userid = $regfee[0]['userid'];
        $userinfo = $user_model->where("userid = {$userid}")->find();
        $nowtime = time();
        $data['status'] = '1';
        $data['paytime'] = $nowtime;
        //更新支付状态
        if($regfee_model->where("reg_sn = '{$out_trade_no}'")->save($data)){
            $detail_model->where("userid = {$userid}")->setInc('shop_sc',$set['back_reg']);
            //更新操作记录表
            $records['sourceid'] = $userid;
            $records['destid'] = $userid;
            $records['amount'] = $set['back_reg'];
            $records['type'] = '积分冲值';
            $records['sc_type'] = '乐购';
            $records['time'] = $nowtime;
            M('operate')->add($records);
        }

        $user_model->where("userid = {$userid}")->setField('is_vip','1');
        $_SESSION['userInfo']['is_vip'] = '1';//更新session中会员状态
        //查询上级信息
        $puserinfo = $user_model->where("userid = {$userinfo['pid']}")->find();
        if($puserinfo['is_vip'] == 1){
            $pback = ($set['regfee']/100)*$set['legou_one'];//返给上级的兑现积分
            $score['cash_sc'] = array('exp',"cash_sc+".$pback);
            $score['credit_sc'] = array('exp',"credit_sc+".$pback);
            $detail_model->where("userid = {$userinfo['pid']}")->save($score);
            //更新操作记录表
            $records['sourceid'] = $userid;
            $records['destid'] = $userinfo['pid'];
            $records['amount'] = $pback;
            $records['type'] = '积分充值';
            $records['sc_type'] = '兑现积分';
            $records['time'] = time();
            M('operate')->add($records);
            //上上级用户信息
            $ppuserinfo = $user_model ->find($puserinfo['pid']);
            if($ppuserinfo['is_vip'] == 1){
                $ppback = ($set['regfee']/100)*$set['legou_two'];//返给上上级的兑现积分
                $score['cash_sc'] = array('exp',"cash_sc+".$ppback);
                $score['credit_sc'] = array('exp',"credit_sc+".$ppback);
                $detail_model->where("userid = {$puserinfo['pid']}")->save($score);
                //更新操作记录表
                $records['sourceid'] = $userid;
                $records['destid'] = $puserinfo['pid'];
                $records['amount'] = $ppback;
                $records['type'] = '积分充值';
                $records['sc_type'] = '兑现';
                $records['time'] = time();
                M('operate')->add($records);
            }
        }
        return true;
    }
    //申请代理支付成功操作
    private function agentfee($out_trade_no) {
        //$userid = $_SESSION['userInfo']['userid'];
        $agent_sn = $out_trade_no;
        //$detail_model = M('userdetail');
        $user_model = M('user');
        $agent_model = M('agentfee');
        $agentfee = $agent_model -> where("agent_sn = '{$agent_sn}'")->select();
        $agentfee = $agentfee[0];
        $userid = $agentfee['userid'];
        $data['status'] = '1';
        $data['paytime'] = time();
        $agent_model->where("agent_sn = '{$agent_sn}'")->save($data);//修改代理费用支付表
        $user_model->where("userid = {$userid}")->setField('is_aplay','1');

        return true;
    }
    //订车支付成功操作
    private function downpay($out_trade_no){
        //$pid = $_SESSION['userInfo']['pid'];
        //$userid = $_SESSION['userInfo']['userid'];
        $book_sn = $out_trade_no;
        $book_model = M('booking');
        $user_model = M('user');
        $detail_model = M('userdetail');
        $setting_model = M('setting');
        $set = $setting_model -> find();

        $data['is_paydown'] = '1';
        $data['paytype'] = '1';
        $data['paytime'] = time();
        $book_model->where("book_sn = '{$book_sn}'")->save($data);//修改订单状态
        $bookinfo = $book_model->where("book_sn = '{$book_sn}'")->select();//订车单信息
        //减库存
        M('haoche')->where("goods_id = {$bookinfo[0]['goods_id']}")->setDec('number',1);
        $bookinfo = $bookinfo[0];
        $userinfo = $user_model ->find($bookinfo[0]['userid']);
        $userid = $userinfo['userid'];
        $pid = $userinfo['pid'];

        if($pid == 0){
            //如果上级不存在
        }else{
            //如果上级存在
            $condition['is_paydown'] = '1';
            $condition['userid'] = $pid;
            $condition['aplay_refunds'] = '0';
            $pbookinfo = $book_model->where($condition)->select();//上级订车单信息
            //如果上级定了车
            if($pbookinfo){
                $pback = ($bookinfo['downpay']/100)*$set['pct_backprev'];//返给上级的兑现积分
                $score['cash_sc'] = array('exp',"cash_sc+".$pback);
                $score['credit_sc'] = array('exp',"credit_sc+".$pback);
                $detail_model->where("userid = {$pid}")->save($score);
                //更新操作记录表
                $records['sourceid'] = $userid;
                $records['destid'] = $pid;
                $records['amount'] = $pback;
                $records['type'] = '订车';
                $records['sc_type'] = '兑现';
                $records['time'] = time();
                M('operate')->add($records);
            }
            $puserinfo = $user_model->find($pid);//上级会员信息

            if($puserinfo['pid'] == 0){
                //如果上上级不存在
            }else{
                //如果上上级存在
                $condition['is_paydown'] = '1';
                $condition['userid'] = $puserinfo['pid'];
                $condition['aplay_refunds'] = '0';
                $ppbookinfo = $book_model->where($condition)->select();//上上级订车单信息
                if($ppbookinfo){
                    $ppback = ($bookinfo['downpay']/100)*$set['pct_backpprev'];//返给上上级的消费积分
                    $detail_model->where("userid = {$puserinfo['pid']}")->setInc("consume_sc",$ppback);
                    //更新操作记录表
                    $records['sourceid'] = $userid;
                    $records['destid'] = $puserinfo['pid'];
                    $records['amount'] = $ppback;
                    $records['type'] = '订车';
                    $records['sc_type'] = '消费';
                    $records['time'] = time();
                    M('operate')->add($records);
                }

            }
        }
        return true;
    }
    //单个商品订单支付成功操作
    private function  orderpay($out_trade_no){
        //$userid = $_SESSION['userInfo']['userid'];
        $orderno = $out_trade_no;
        $setting_model = M('setting');
        //fwrite(fopen("./Home/xx.txt",'w'),print_r($out_trade_no, true));
        $detail_model = M('userdetail');
        $order_model = M('order');
        $set = $setting_model -> find();
        //查询订单信息
        $orderinfo = $order_model->where("orderno = '{$orderno}'")->find();
        $userid = $orderinfo['userid'];
        //fwrite(fopen("./Home/xx.txt",'w'),print_r($orderinfo, true));
        //fwrite(fopen("./Home/zz.txt",'w'),print_r($userid, true));
        //从用户积分中扣除所需乐购积分
        $detail_model ->where("userid = {$userid}")->setDec('shop_sc',$orderinfo['score']);

        $data['pay_status'] = '1';
        $data['paytime'] = time();
        $order_model -> where("orderno = '{$orderno}'") -> save($data);//修改订单状态
        //减少库存
        M('goods')->where("goods_id = {$orderinfo['goods_id']}")->setDec('number',$orderinfo['number']);

        return true;
    }
    //多个商品合并支付操作成功
    private function sumpay($out_trade_no){
        //$userid = $_SESSION['userInfo']['userid'];
        $sum_sn = $out_trade_no;
        $setting_model = M('setting');
        $sumorder_model = M('sumorder');
        $goods_model = M('goods');
        $detail_model = M('userdetail');
        $order_model = M('order');
        $set = $setting_model -> find();
        //查询合并订单信息
        $sumorderinfo = $sumorder_model->where("sum_sn = '{$sum_sn}'")->find();
        $userid = $sumorderinfo['userid'];
        //从用户积分中扣除所需乐购积分
        $detail_model ->where("userid = {$userid}")->setDec('shop_sc',$sumorderinfo['total_sc']);

        $data['status'] = '1';
        $data['paytime'] = time();
        $sumorder_model -> where("sum_sn = '{$sum_sn}'") -> save($data);//修改合并支付订单状态
        unset($data['status']);$data['pay_status'] = '1';
        $sum_order = $sumorder_model -> where("sum_sn = '{$sum_sn}'") -> select();
        $sumid = $sum_order[0]['sumid'];
        $order_model -> where("sumid = {$sumid} AND userid = {$userid}") ->save($data);//设置单个订单的状态
        $ids_arr = $order_model->field("goods_id,number")->where("sumid = {$sumid} AND userid = {$userid}")->select();
        //$newarr = array();
        foreach($ids_arr as $key=>$value){
            //减库存
            $goods_model->where("goods_id = {$value['goods_id']}")->setDec('number',$value['number']);
        }

        return true;
    }
    //房天下意向金支付成功操作
    private function housepay($out_trade_no) {
        $serial_no = $out_trade_no;
        $data['pay_status'] = '1';
        $data['paytime'] = time();
        M('house')->where("serial_no = '{$serial_no}'")->save($data);

        return true;
    }
    //捐助成功后操作
    private function donate($out_trade_no) {
        $cimoney = M('cimoney')->where("serial_no = '{$serial_no}'")->select();
        $cimoney = $cimoney[0];
        $serial_no = $out_trade_no;
        M('cimoney')->where("serial_no = '{$serial_no}'")->setField('status','1');
        $donate = M('donate')->find();
        M('donate')->where("id = {$donate['id']}")->setInc('surplus',$cimoney['money']);
        return true;
    }
    //办卡成功后
    private function banka($out_trade_no) {
        //$userid = $_SESSION['userInfo']['userid'];
        //$pid = $_SESSION['userInfo']['pid'];
        $set = M('setting')->field('caishen')->find();
        $caiclub = M('Caiclub');
        $user_model = M('user');
        $serial_sn = $out_trade_no;
        //办卡信息
        $bankainfo = $caiclub -> where("serial_sn = '{$serial_sn}'") ->select();
        //用户资料
        $userinfo = $user_model -> find($bankayinfo[0]['userid']);
        $userid = $userinfo['userid'];
        $pid = $userinfo['pid'];
        $data['pay_status'] = '1';
        $data['paytime'] = time();
        $caiclub->where("serial_sn = '{$serial_sn}'")->save($data);
        if($pid != 0){
            $pbanka =  $caiclub->where("userid = {$pid}")->find();
            if($pbanka){
                $pback = round(($caiclub['card_fee']*$set['caishen'])/100,2);
                $score['cash_sc'] = array('exp',"cash_sc+".$pback);
                $score['credit_sc'] = array('exp',"credit_sc+".$pback);
                M('userdetail')->where("userid = {$userid}")->save($score);
                //更新操作记录表
                $records['sourceid'] = $userid;
                $records['destid'] = $pid;
                $records['amount'] = $pback;
                $records['type'] = '办卡';
                $records['sc_type'] = '兑现';
                $records['time'] = time();
                M('operate')->add($records);
            }
        }
        return true;;
    }
    //养卡支付成功后
    private function yangka($out_trade_no) {
        $serial_sn = $out_trade_no;
        $data['pay_status'] = '1';
        $data['paytime'] = time();
        M('yangka')->where("serial_sn = '{$serial_sn}'")->save($data);
        return true;
    }
    //提额支付成功后
    private function tie($out_trade_no) {
        $serial_sn = $out_trade_no;
        $data['pay_status'] = '1';
        $data['paytime'] = time();
        M('tie')->where("serial_sn = '{$serial_sn}'")->save($data);
        return true;
    }
    //贷款支付成功后
    private function daikuan($out_trade_no) {
        $serial_sn = $out_trade_no;
        $data['pay_status'] = '1';
        $data['paytime'] = time();
        M('daikuan')->where("serial_sn = '{$serial_sn}'")->save($data);
        return true;
    }
    //会员费支付成功回调
    private function vipfee($out_trade_no){
        $bevip_model = M('bevip');
        $set = M('setting')->find();
        $nowtime = time();
        $vipfee = $bevip_model->where("ordersn = '{$out_trade_no}'")->find();//会员缴费信息
        $userid = $vipfee['userid'];
        $user_model = M('user');
        $userinfo = $user_model -> find($userid);//用户信息
        $paystatus['paytime'] = $nowtime;
        $paystatus['status'] = '1';
        //如果修改支付状态成功，执行以下操作
        if($bevip_model->where("vipid = {$vipfee['vipid']}")->save($paystatus)){
            $data['is_supvip'] = '1';
            $data['is_vip'] = '1'; 
            $data['viptime'] = $nowtime;
            $data['vipexpire'] = $nowtime + $set['vipexpire'] * 365 * 24 * 3600;
            //如果修改用户状态成功，执行以下操作
            if($user_model->where("userid = {$userid}")->save($data)){
                //计算返回的兑现积分
                if(($userinfo['pid'] != 0) && ($userinfo['is_supvip'] == 1)){
                    $pback = round($vipfee['amount'] * $set['pct_prev'] / 100);
                    //计算上级会员获得积分
                    $user_model -> where("userid = {$userinfo['pid']}") -> setInc('cash_sc',$pback);
                    //更新操作记录表
                    $records['sourceid'] = $userid;
                    $records['destid'] = $userinfo['pid'];
                    $records['amount'] = $pback;
                    $records['type'] = '成为联盟会员';
                    $records['sc_type'] = '兑现';
                    $records['time'] = $nowtime;
                    M('operate')->add($records);
                    //上级会员信息
                    $puserinfo = $user_model -> where("userid = {$userinfo['pid']}") -> find();
                }               
                if($puserinfo && ($puserinfo['pid'] != 0) && ($puserinfo['is_supvip'] == 1)){
                    $ppback = round($vipfee['amount'] * $set['pct_pprev'] / 100);
                    //计算上上级会员获得积分
                    $user_model -> where("userid = {$puserinfo['pid']}") -> setInc('cash_sc',$ppback);
                    //更新操作记录表
                    $records['sourceid'] = $userid;
                    $records['destid'] = $puserinfo['pid'];
                    $records['amount'] = $ppback;
                    $records['type'] = '成为联盟会员';
                    $records['sc_type'] = '兑现';
                    $records['time'] = $nowtime;
                    M('operate')->add($records);
                }  
                //计算商家获得返利
                if($userinfo['sid'] != 0){
                    $sback = round($vipfee['amount'] * $set['pct_other'] / 100);
                    $user_model -> where("userid = {$userinfo['sid']}") -> setInc('cash_sc',$sback);
                    //更新操作记录表
                    $records['sourceid'] = $userid;
                    $records['destid'] = $userinfo['sid'];
                    $records['amount'] = $sback;
                    $records['type'] = '成为联盟会员';
                    $records['sc_type'] = '兑现';
                    $records['time'] = $nowtime;
                    M('operate')->add($records);
                }
            }
        }
        return true;
    }
    //成为商家缴费成功回调
    private function mchfee($out_trade_no){
        $set = M('setting')->find();
        $seller_model = M('seller');
        $seller = $seller_model -> where("ordersn = '{$out_trade_no}'")->find();
        $userid = $seller['userid'];
        $seller_id = $seller['seller_id'];
        $userinfo = M('user')->find($userid);
        $nowtime = time();
        $pay['paystatus'] = '1';
        $pay['paytime'] = $nowtime;
        if($seller_model->where("seller_id = {$seller_id}")->save($pay)){
            //$data['is_merch'] = '1'; 
            //$data['merchtime'] = $nowtime;
            //$data['merchexpire'] = $nowtime + $set['merchexpire'] * 365 * 24 * 3600;
            //if(M('user')->where("userid = {$userid}")->save($data)){
            //记录缴费信息
            $shuju['userid'] = $userid;
            $shuju['seller_id'] = $seller_id;
            $shuju['ctime'] = $nowtime;
            $shuju['amount'] = $set['mchfee'];
            return true;
            //}   
        }
        return true;
    }
    //商家订单支付成功回调
    private function sorderpay($out_trade_no){
        $data['paytime'] = time();
        $data['pay_status'] = '1';
        if(M('sorder')->where("orderno = '{$out_trade_no}'")->save($data)){
            $orderinfo = M('sorder')->where("orderno = '{$out_trade_no}'")->find();
            $goodsinfo = M('sgoods')->find($orderinfo['goods_id']);
            //商家获得金额
            $amount = round($orderinfo['orderamount'] * (100 - $goodsinfo['discount']) / 100,2);
            M('user')-> where("userid = {$goodsinfo['userid']}")->setInc('money',$amount);
            //计算平台收益
            $shuju['orderid'] = $orderinfo['orderid'];
            $shuju['seller_id'] = $goodsinfo['userid'];
            $shuju['amount'] = $orderinfo['orderamount'] - $amount;
            $shuju['ctime'] = time();
            M('shouyi')->add($data);
            return true;
        }
        return true;
    }
}