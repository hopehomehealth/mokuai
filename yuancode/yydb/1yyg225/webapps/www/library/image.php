<?php/** * Created by PhpStorm. * User: G * Date: 13-11-27 * Time: 17:42 */class Image_Library{    public $vars;  #图片参数 array('src_img'=>'原图地址[必须参数]')    public $Bimg;  #需加水印图片(底图)    public $Simg;  #水印图片    public $Bimg_w;#底图宽 int    public $Bimg_h;#底图高 int    public $Bimg_type;#原图类型[jpg,png,gif,bmp]    public $Simg_w;#水印图宽 int    public $Simg_h;#水印图高 int    public $wm_Sx; #水印图片距离大图左边的位置    public $wm_Sy; #水印图片距离大图上边的位置    public $mime = array(1=>'gif',2=>'jpeg',3=>'png',4=>'wbmp');    public $Sy;    public $Sx;    public $Bimg_x; #缩略图裁剪x起始坐标    public $Bimg_y; #缩略图裁剪y起始坐标    function __construct($vars){        #大图 src_img[必须参数] $vars = array('src_img'=>'原图路径');        $this->vars = $vars;        if(isset($vars['src_img']))$this->load_src($vars['src_img']);    }    function set_params($vars){foreach($vars as $k=>$v)$this->vars[$k]=$v;}    function load_src($src){        $BimgInfo = getimagesize($src);        $this->Bimg_w = $BimgInfo[0];        $this->Bimg_h = $BimgInfo[1];        $this->Bimg_type = $this->mime[$BimgInfo[2]];        $this->Bimg = $this->newImage($this->Bimg_type, $src);    }    #生成水印    /*     array(         dst_path=>新生成图片(带水印)的路径,         mark_img=>水印图片路径         position=>array('left'=>5,'top'=>5) 水印图片在原图的位置(px像素)     );     */    function watermark(){        $SimgInfo = getimagesize($this->vars['mark_img']);        $this->Simg_w = $SimgInfo[0];        $this->Simg_h = $SimgInfo[1];        $Simg_type  = $this->mime[$SimgInfo[2]];        $this->Simg = $this->newImage($Simg_type, $this->vars['mark_img']);        $position = isset($this->vars['position'])?$this->vars['position']:array('left'=>5,'top'=>5);        $this->setSimgPos($position);        imagecopy($this->Bimg,$this->Simg,$this->Sx,$this->Sy,0,0,$SimgInfo[0],$SimgInfo[1]);        $imgfn = 'image'.$this->Bimg_type;        $imgfn($this->Bimg, $this->vars['dst_path']);        imagedestroy($this->Bimg);    }    #设置水印图片位置    private function setSimgPos($pos){        is_array($pos)||die("图片水印位置参数格式错误,如array('left'=>5,'top'=>5)");        foreach($pos as $k=>$v)$this->$k($v);    }    #水印图片定位    private function top($int){$this->Sy = $int;}    private function left($int){$this->Sx = $int;}    private function right($int){$this->Sx = $this->Bimg_w - $this->Simg_w - $int;}    private function bottom($int){$this->Sy = $this->Bimg_h - $this->Simg_h - $int;}    #创建图片    private function newImage($type, $path){        $fn='imagecreatefrom'.$type;        return $fn($path);    }    function resize($W,$H,$SavePath,$autoRatio = false){        preg_match('/\.(png|jpg|gif|jpeg)$/',strtolower($SavePath),$ext)||die('生成图片格式错误');        $ext = $ext[1]=='jpg'?'jpeg':$ext[1];#生成图片扩展名判断        if($autoRatio && $W!=0 && $H!=0){            $W/$this->Bimg_w<$H/$this->Bimg_h ? ($H = 0) : ($W = 0);            //$W/$this->Bimg_w<$H/$this->Bimg_h ? ($H = 0) : ($W = $W);        }        if($H==0)$H = $W*$this->Bimg_h/$this->Bimg_w;if($W==0)$W = $H*$this->Bimg_w/$this->Bimg_h;#安比例生成        $params = $this->WH_Handle($this->Bimg_w,$this->Bimg_h,$W,$H);        $NewImg = imagecreatetruecolor($W,$H);        //----背景透明        $trans = imagecolorallocate($NewImg, 255,255,255);        #imagecolortransparent($NewImg,$trans);        imagefill($NewImg, 0,0, $trans);        //----End背景透明        imagecopyresampled($NewImg, $this->Bimg,$params['left'],$params['top'],$params['src_x'],$params['src_y'],$W,$H,$params['rw'],$params['rh']);        if($params['top']!=0||$params['left']!=0){            $dst_im = imagecreatetruecolor($W,$H);            $trans = imagecolorallocate($dst_im, 255,255,255);            imagefill($dst_im,0,0,$trans);            $W-=($params['left']-$params['src_x'])*2;            $H-=($params['top']-$params['src_y'])*2;            imagecopymerge($dst_im, $NewImg,$params['left'],$params['top']-$params['src_y'],$params['left'],$params['top']-$params['src_y'],$W,$H,100);            $NewImg = $dst_im;        }        $fn = 'imagepng';        $fn($NewImg,$SavePath)||die('图片写入失败！');    }    function WH_Handle($SrcW, $SrcH, $NewW, $NewH){        $top = $left = 0;        $src_y = $src_x = 0;        $RatioH = $SrcH;        $RatioW = $SrcW;        if($SrcW>$NewW && $SrcH>$NewH){            if($SrcW/$SrcH < $NewW/$NewH){                #echo '原图比缩略图苗条';#,原图的宽比例缩到新图的宽                $RatioH = $SrcW*$NewH/$NewW;                $src_y = ($SrcH-$SrcW*$NewH/$NewW)/2;#$src_y = ($SrcH*$NewW/$SrcW-$NewH)/2;#缩略后的比列            }else{                #echo '原图比缩略图扁';                $RatioW = $SrcH*$NewW/$NewH;                $src_x = ($SrcW-$NewW*$SrcH/$NewH)/2;            }        }elseif($SrcW<$NewW && $SrcH<$NewH){            $RatioW = $NewW;$RatioH = $NewH;            $left = ($NewW-$SrcW)/2;            $src_y = -($NewH-$SrcH)/2;        }elseif($SrcW<$NewW || $SrcH<$NewH){            if($SrcW<$NewW){                $RatioW = $SrcH*$NewW/$NewH;#比例宽度 = $SrcW/? = $SrcH/$NewH;                $left = ($NewW-$SrcW/($SrcH/$NewH))/2;            }else{                $RatioH = $SrcW*$NewH/$NewW;#比例高度 = $SrcH*$NewW/$SrcW;                $top = ($NewH-($SrcH*$NewW/$SrcW))/2;            }        }        if($this->Bimg_x){            $left = $this->Bimg_x;        }        if($this->Bimg_y){            $top = $this->Bimg_y;        }        return array('rw'=>$RatioW,'rh'=>$RatioH,'left'=>$left,'top'=>$top,'src_x'=>$src_x,'src_y'=>$src_y);    }    #图片裁剪,生成的图像的宽,高.  裁剪范围的宽,高  裁剪的左上角坐标top,left, 保存地址    function crop($width,$height,$W,$H,$Top,$Left,$SavePath){        preg_match('/\.(png|jpg|gif|jpeg)$/',strtolower($SavePath),$ext)||die('生成图片格式错误');        $ext = $ext[1]=='jpg'?'jpeg':$ext[1];#生成图片扩展名判断        $img = imagecreatetruecolor($width,$height);        imagecopyresampled($img, $this->Bimg,0,0,$Left,$Top,$width,$height,$W,$H);        $fn = 'imagepng';        $fn($img,$SavePath);    }}/*$this->load->model('image');('image',array(	'src_img'=>$root.'test.jpg',	'position'=>array('left'=>250,'top'=>225),	'dst_path'=>$root.'aaa.jpg',	'mark_img'=>$root.'iphone.png',	'ratio'=>'裁剪图片是否按等比例生成, true为是,false为否'));$this->image->watermark();$this->lib('image',array(	'src_img'=>$root.'test.jpg'));*/