<?php #支付接口函数库/** * 取得返回信息地址 * @param   string  $code   支付方式代码 */function return_url($code){    return RootUrl . 'welcome/respond?code=' . $code;}/** *  取得某支付方式信息 *  @param  string  $code   支付方式代码 */function get_payment($code){    global $lowxp;    $sql = "SELECT * FROM ###_payment WHERE pay_code = '$code' AND enabled = '1' LIMIT 1";    $payment = $lowxp->db->get($sql);    if ($payment)    {        $config_list = unserialize($payment['pay_config']);        foreach ($config_list AS $config)        {            $payment[$config['name']] = $config['value'];        }    }    return $payment;}/** *  通过订单sn取得订单ID *  @param  string  $order_sn   订单sn *  @param  blob    $voucher    是否为会员充值 */function get_order_id_by_sn($order_sn, $voucher = 'false'){    global $lowxp;    if ($voucher == 'true')    {        if($order_sn)        {            $lowxp->db->getstr("SELECT log_id FROM ###_pay_log WHERE order_id=" . $order_sn . ' AND order_type='.PAY_SURPLUS);        }        else { return ""; }    }    else    {        $order_id = '';        if($order_sn)        {            $order_id = $lowxp->db->getstr("SELECT id FROM ###_goods_order WHERE order_sn = '$order_sn'");        }        if (!empty($order_id))        {            $pay_log_id = $lowxp->db->getstr("SELECT log_id FROM ###_pay_log WHERE order_id='" . $order_id . "'");            return $pay_log_id;        }        else { return ""; }    }}/** *  通过订单ID取得订单商品名称 *  @param  string  $order_id   订单ID */function get_goods_name_by_id($order_id){    global $lowxp;    $sql = "SELECT goods_name FROM ###_goods_order_item WHERE order_id = '".$order_id."'";    $res = $lowxp->db->select($sql);    $goods_name = '';    foreach($res as $v){        $goods_name .= ','.$v['goods_name'];    }    return substr($goods_name, 1);}/** * 检查支付的金额是否与订单相符 * * @access  public * @param   string   $log_id      支付编号 * @param   float    $money       支付接口返回的金额 * @return  true */function check_money($log_id, $money){    global $lowxp;    $sql = "SELECT order_amount FROM ###_pay_log WHERE log_id = '".$log_id."'";    $amount = $lowxp->db->getstr($sql);    if ($money == $amount) { return true; }    else { return false; }}/** * 插入天工支付订单号 */function insert_order_sn($log_id, $data=array()){	global $lowxp;	if($log_id && !empty($data)){		$lowxp->payment->pay_log_save(array_merge(array('log_id'=>$log_id), $data));	}	return true;}/** * 支付订单状态 */function order_paid($log_id, $pay_status = PS_PAYED, $note = ''){    global $lowxp;    /* 取得支付编号 */    $log_id = intval($log_id);    if ($log_id > 0)    {        $lowxp->load->model('payment');        /* 取得要修改的支付记录信息 */        $pay_log = $lowxp->payment->pay_log($log_id);        //session记录pay_id        if($pay_log){            $_SESSION['pay_id'] = $log_id;            //清除购物车            if($pay_log['order_type'] == PAY_DB){                $lowxp->load->model('yunbuy');                $order = $lowxp->yunbuy->orderInfo($pay_log['order_id']);                if($order['order_id']){                    $db = $lowxp->yunbuy->orderDb($order['order_id']);                    $ids = array();                    foreach($db as $k=>$v){                        $ids[$k] = $v['buy_id'];                    }                    if(!empty($ids)){                        $_SESSION['mid'] = $order['mid'];                        $lowxp->yunbuy->emptyCart_1($ids);                    }                }            }        }        if ($pay_log)        {        	if($pay_log['is_paid'] == 0){	            /* 修改此次支付操作的状态为已付款 */	            $lowxp->payment->pay_log_save(array('log_id'=>$log_id,'is_paid'=>1));		            /* 根据记录类型做相应处理 */	            if ($pay_log['order_type'] == PAY_ORDER)	            {	                #订单状态设为：已付款	                $lowxp->load->model('order');	                $lowxp->order->chageOrderState($pay_log['order_id'], 2, '订单支付成功', array('amount'=>$pay_log['order_amount']));		            }elseif($pay_log['order_type'] == PAY_SURPLUS){		                $lowxp->load->model('member');	                $lowxp->db->update('member_account',array('status'=>2),array('id'=>$pay_log['order_id']));	                $member_account = $lowxp->db->get("SELECT * FROM ###_member_account WHERE id = '$pay_log[order_id]'");	                $insert_arr = array();	                $insert_arr['mid'] = $member_account['mid'];	                $insert_arr['username'] = $member_account['username'];	                $insert_arr['user_money'] = $member_account['amount'];	                $insert_arr['desc'] = "通过$member_account[pay_name]充值账户";	                	                //充值送抵用券	                $desc = '充值送'.$lowxp->L['unit_db_points'].$lowxp->L['unit_bonus'];	                $recchage_discount = explode("\n",$lowxp->site_config['recchage_discount']);	                $discount = array();	                if($recchage_discount){	                    foreach($recchage_discount as $v){	                        $v = trim($v);	                        if(empty($v)) continue;		                        $v = explode('|',$v);	                        if(!empty($v[0]) || !empty($v[1])){	                            $discount[trim($v[0])] = trim($v[1]);	                        }	                    }		                $amount = (int) $member_account['amount'];	                    $give = isset($discount[$amount]) ? $discount[$amount] : 0;	                    if($give>0){	                        $lowxp->load->model('bonus');	                        $number = ceil($give/1);	                        $lowxp->bonus->send(array(	                                'mid'  => $member_account['mid'],	                                'desc' => $desc,	                                'number' => $number,	                                'money' => 1,	                        ));	                        $insert_arr['desc'] .= "(赠送 $give ".$lowxp->L['unit_db_points'].$lowxp->L['unit_bonus'].")" ;	                    }	                }		                $lowxp->member->accountlog('recharge',$insert_arr);	                $url = url('/member/accountlog');		            }elseif($pay_log['order_type'] == PAY_DB){	                $lowxp->load->model('yunbuy');	                $lowxp->load->model('member');	                $yunorder = $lowxp->yunbuy->orderInfo($pay_log['order_id']);	                $data = array('error'=>0, 'error_text'=>'');		                //退还第三方支付到余额	                if($yunorder['user_bonus_id'] > 0){	                    //判断抵用券是否还足够支付	                    $array_bonus = explode(',',$yunorder['user_bonus_id']);	                    $count_bonus_member = $lowxp->db->getstr("select COUNT(*) from ###_member_bonus where order_id=0 and id IN(".$yunorder['user_bonus_id'].")");	                    if(count($array_bonus) > $count_bonus_member){	                        $data['error'] = 1;	                        $data['error_text'] = '抵用券不足';	                    }	                }	                if($data['error'] == 0 && ($yunorder['db_points']+$yunorder['user_money']) > 0){	                    //判断余额是否还足够支付	                    $lowxp->load->model('member');	                    $member_info = $lowxp->member->member_info($yunorder['mid'], 'user_money,db_points');	                    if(($yunorder['db_points'] >0 && $yunorder['db_points'] >$member_info['db_points']) ||	                       ($yunorder['user_money']>0 && $yunorder['user_money']>$member_info['user_money'])){	                        $data['error'] = 1;	                        $data['error_text'] = '帐户余额不足';	                    }	                }		                if($data['error'] == 1){	                    //处理退还第三方支付到余额	                    $lowxp->load->model('member');	                    $lowxp->member->accountlog(ACT_DB,array(	                        'mid'=>$yunorder['mid'],	                        'username'=>$yunorder['username'],	                        'user_money'=>$pay_log['order_amount'],	                        'desc'=>$data['error_text'].'，退还第三方支付金额 '.$yunorder['order_sn'],	                    ));		                    //删除支付失败的订单	                    $lowxp->db->delete('###_yunorder', array('order_id'=>$yunorder['order_id']));	                    $lowxp->db->delete('###_yundb', array('order_id'=>$yunorder['order_id']));	                    $lowxp->db->delete('###_goods_order', array('order_sn'=>$yunorder['order_sn']));		                    return $data;	                }		                //查询夺宝订单	                $bonus['money'] = 0;	                //扣除抵用券	                if($yunorder['user_bonus_id'] > 0){	                    $lowxp->db->save('member_bonus',array(	                        'used_time' => time(),	                        'order_id'  => $pay_log['order_id'],	                    ),'',"id IN(".$yunorder['user_bonus_id'].")");	                    //计算抵用券	                    $bonus['money'] = $lowxp->db->getstr("select SUM(money) from ###_member_bonus where id IN(".$yunorder['user_bonus_id'].")");	                }	                //扣除余额和夺宝币	                if(($yunorder['db_points']+$yunorder['user_money']+$yunorder['pay_points']) > 0){	                    //记录账户明细	                    $log_arr = array();	                    $log_arr['mid'] = $yunorder['mid'];	                    $log_arr['username'] = $yunorder['username'];	                    $log_arr['pay_points'] = -$yunorder['pay_points'];	                    $log_arr['db_points'] = -$yunorder['db_points'];	                    $log_arr['user_money'] = -$yunorder['user_money'];	                    $log_arr['desc'] = $lowxp->L['unit_yun'].'出价 '.$yunorder['order_sn'];	                    	                    if($bonus['money']) $log_arr['desc'] .= "(使用".$lowxp->L['unit_bonus'].$bonus['money']."元)";	                    $log_arr['rank_points'] = $yunorder['pay_points']+$yunorder['user_money']+$yunorder['db_points']; #加经验值	                    $lowxp->member->accountlog('db',$log_arr);	                }		                //在线支付送网盘	                if((($pay_log['order_amonut']+$yunorder['user_money'])>0)&&($lowxp->site_config['pay_discount_status']==1)&&($lowxp->site_config['pay_discount']>0)){	                	//这里增加空间数量	                	$amount = ($pay_log['order_amonut']+$yunorder['user_money'])*number_format($lowxp->site_config['pay_discount']);	                	$lowxp->db->update('member',"spacedata = spacedata+$amount*1024*1024 ",array('mid'=>$yunorder['mid']));	                }	                $desc = "";	               	if($amount){	               		$desc = "，买".$lowxp->L['unit_skydrive']."送".$lowxp->L['unit_db_points']."或者".$lowxp->L['unit_pay_points']."送空间"."$amount"."M";	               	}	                //按付款金额加经验值	                $lowxp->load->model('member');	                $lowxp->member->accountlog(ACT_DB,array(	                    'mid'=>$yunorder['mid'],	                    'username'=>$yunorder['username'],	                    'rank_points'=>$pay_log['order_amount'],	                    'amount' => $pay_log['order_amount'],	                    'desc'=>$lowxp->L['unit_yun'].'在线支付（'.$yunorder['pay_name'].'）'.$yunorder['order_sn'].$desc	                ));		                #更新云购订单状态	                $lowxp->yunbuy->updateOrder(array('status'=>2),$pay_log['order_id']);		                #更新直购订单状态	                $order_info = $lowxp->db->get("SELECT * FROM ###_goods_order WHERE order_sn='".$yunorder['order_sn']."'");	                if($order_info){	                    $lowxp->db->update("goods_order",array('status'=>2,'amount'=>0),array('order_sn'=>$yunorder['order_sn']));	                }		                $url = url('/member/yunorder');	                $lowxp->yunbuy->orderPayed($pay_log['order_id']);		                return $data;	            } elseif ($pay_log['order_type'] == PAY_CROWD){	                $lowxp->load->model('crowd_support');	                $return = $lowxp->crowd_support->orderSupport($pay_log['order_id']);	                $support = $lowxp->crowd_support->getSupportBySupportId($pay_log['order_id']);	                $insert = array();	                $insert['mid'] = $support['member_id'];	                $insert['username'] = $support['member_username'];		                switch ($return) {	                    case 0:	                        $insert['desc'] = "通过 $support[pay_payment] 支付，支持众筹" . $support['cd_name'] . '，回报 ' . $support['rt_name'];	                        break;	                    case -2:	                        $insert['desc'] = '支持名额已满，订单已退款至用户账户。' . "通过 $support[pay_payment] 支付，支持众筹" . $support['cd_name'] . '，回报 ' . $support['rt_name'];	                        break;	                    case -3:	                        $insert['desc'] = '支持不存在。' . "通过 $support[pay_payment] 支付，支持众筹" . $support['cd_name'] . '，回报 ' . $support['rt_name'];	                        break;	                    case -1:	                    default:	                        $insert['desc'] = '更新操作失败。' . "通过 $support[pay_payment] 支付，支持众筹" . $support['cd_name'] . '，回报 ' . $support['rt_name'];	                        break;	                }	                $insert['amount'] = $pay_log['order_amount'];	                $insert['user_money'] = $support['pay_amount'] - $support['support_amount'];	                $lowxp->load->model('member');	                $lowxp->member->accountlog('support', $insert);	                $url = url('/crowd');	            }        	}else{        		return array('error'=>0);        	}        }else{            $yunorder = $lowxp->yunbuy->orderInfo($pay_log['order_id']);            if(!$yunorder){                return array('error'=>'1', 'error_text'=>'支付异常');            }        }        return array('error'=>0);    }}