<?php/** * 商家模型 */class business_model extends Lowxp_Model{    public $business_power = 1; #商家功能总开关    public $baseTable = '###_business';    public $memberTable = '###_member';    function __construct(){}    /** 获取单条商家信息     * @param string $where     * @param string $field     * @return array|null     */    function get($where='1', $field='*'){        $where = $this->whereFormat($where);        $sql = "select $field from ".$this->baseTable." WHERE ".$where;        $row = $this->db->get($sql);        $row = $this->formatThumb($row);        return $row;    }    /** 获取商家商品分页列表     * @param $mid     * @param int $size     * @param int $page     * @param array $options     * @return array     */    function getYunList($mid, $size=10, $page=1, $options = array()){        //条件        $where = ' WHERE 1 ';        if($mid){            $where .= " AND mid=$mid";        }        if(isset($options['where'])){            if(is_array($options['where'])){                foreach($options['where'] as $k=>$v){                    $where .= " AND ".addslashes($k)."='".addslashes($v)."'";                }            }else{                $where .= $options['where'];            }        }        //默认不调取直购商品        if(isset($options['gobuy']) && $options['gobuy'] == 1){            $where .= " AND `gobuy`=1";        }else{            $where .= " AND `gobuy`!=1";        }        //排序        $order = ' ORDER BY ';        $order .= isset($options['order']) ? $options['order'] : 'y.buy_id DESC';        //分页        $this->load->model('page');        $_GET['page'] = intval($page);        $this->page->set_vars(array('per'=>$size));        //内容列表结果        $urlQuery = isset($options['url']) ? $options['url'] : "";        $target = isset($options['target']) ? $options['target'] : "#m";        $fields = isset($options['fields']) ? $options['fields'] : 'y.*';        $sql = "SELECT $fields,buy_num/need_num AS ratio FROM ###_yunbuy AS y $where $order";        $list = $this->page->hashQuery($sql,$urlQuery,$target)->result_array();        foreach($list as $k=>$v){            $v['jindu'] = sprintf("%.2f",$v['buy_num']/$v['need_num']*100);            $list[$k] = $v;        }        //返回数量        $type = isset($options['type']) ? trim($options['type']) : '';        if($type == 'count'){            $count = $this->page->pages['total'];            return $count;        }        //格式化内容        $this->load->model('yunbuy');        foreach($list as $k=>$v){            $v = $this->yunbuy->getThumb($v,1);            $v['url'] = url('/yunbuy/detail/'.$v['buy_id']);            $list[$k] = $v;        }        return $list;    }    /** 更新/添加商家     * @param $update     * @param string $where     * @return bool|DB_Result|mysqli_result     */    function save($update, $where=''){        $bool = $this->db->save($this->baseTable, $update, '', $where);        return $bool;    }    /** 执行商家分润 功能函数     *     * -云购商品，商家中心及后台发货时发放佣金     * -直购商品，只能是商家中心发货时发放佣金     * -$bus_mid由商家中心传入     *     * @param $order_id     * @param int $type 0自动结算 1手动结算     * @param int $bus_mid     * @return bool     */    function bus_commission($order_id, $type=0, $bus_mid = 0){        //商家开关判断        $this->load->model('business');        $business_power = $this->business->business_power;        if(!$business_power) return false;        //商家配置（配置为手动结算时，自动结算无效）        $config_other = $this->setting->value_other();        if(isset($config_other['bus_type']) && $config_other['bus_type'] == 1 && $type == 0) return false;        //非商家订单        $order = $this->db->get("SELECT bus_mid,bus_money_is,extension_id,extension_code,order_sn FROM ###_goods_order WHERE id=".$order_id." AND extension_code IN('".CART_DB."','".CART_BUY."')");        if(!$order) return false;        //获取商家分润金额        $bus_money = 0;        $desc = "商家资金结算";        if($order['extension_code'] == CART_BUY){            //直购商品需要传入商家ID（必须由商家亲自发货）            if(!$bus_mid) return false;            $goods_order_item = $this->db->select("select goi.id,goi.sell_price,goi.buy_num,g.rebate from ###_goods_order_item as goi ".                "left join ###_goods as g on g.id=goi.good_id ".                "where goi.order_id='$order_id' AND g.mid='$bus_mid' AND bus_money_is=0");            if($goods_order_item){                foreach($goods_order_item as $v){                    $bus_money += $this->bus_rebate($v['sell_price']*$v['buy_num'],0,$v['rebate']);                    //分润标记                    $this->db->update('goods_order_item',array('bus_money_is'=>1), array('id'=>$v['id']));                }                $desc .= "（".$this->L['unit_go_buy']."订单号：".$order['order_sn']."）";            }        }        elseif($order['extension_code'] == CART_DB){            //云购商品，需要判断订单是否为商家订单            if(!$order['bus_mid']) return false;            if($order['bus_money_is']==1) return false;            $bus_mid = $order['bus_mid'];            $buy_id = $this->db->getstr('select buy_id from ###_yundb where id='.$order['extension_id']);            $yun_info = $this->db->get("select title,goods_price,bus_money,mid,goods_id from ###_yunbuy where `type`=1 and buy_id='".$buy_id."'");            if($yun_info['mid'] != $order['bus_mid']) return false;            $goods = $this->db->get("SELECT rebate FROM ###_goods WHERE id=".$yun_info['goods_id']);            $bus_money = $this->bus_rebate($yun_info['goods_price'],0,$goods['rebate']);            //分润标记            $this->db->update('yunbuy',array('bus_money'=>$bus_money), array('buy_id'=>$buy_id));            $this->db->update('goods_order',array('bus_money_is'=>1), array('id'=>$order_id));            $desc .= "（<a href='/yunbuy/detail/".$buy_id."' target='_blank'>".$yun_info['title']."</a>）";        }        if($bus_money<=0) return false;        //分润结算        $this->load->model('member');        $this->member->accountlog(ACT_ORDER,array(            'mid'        => $bus_mid,            'user_money' => $bus_money,            'desc'       => $desc,        ));        return true;    }    /** 计算商家分润/平台抽佣 金额     * @param $goods_price     * @param int $type 1返回平台抽佣 0返回商家分润     * @param int rebate 0使用默认返佣 -1不返佣 >0使用此返佣点     * @return float     */    function bus_rebate($goods_price, $type=0, $rebate=0){        $config_other = $this->setting->value_other();        $bus_rebate = floatval($config_other['bus_rebate']);        if($rebate < 0 && $rebate == -1){ $bus_rebate = 0; }        elseif($rebate > 0){ $bus_rebate = $rebate; }        if($bus_rebate>100 || $bus_rebate<0){ $bus_rebate = 0; }        $bus_money_manage = sprintf("%.2f", $bus_rebate*$goods_price/100); //平台抽佣        $bus_money = $goods_price - $bus_money_manage;    //商家分润        if($type == 1) return $bus_money_manage;        else return $bus_money;    }    /** 获取商家发布商品上限数量     * @param array $business_row #为空时返回默认上限值     * @return int     */    function bus_limit($business_row=array()){        $bus_limit = 50; //默认上限值        if(isset($business_row['bus_limit']) && (int) $business_row['bus_limit'] > 0){            //商家单独配置的上限值            $bus_limit = (int) $business_row['bus_limit'];        }else{            $config_other = $this->setting->value_other();            if(isset($config_other['bus_limit']) && (int) $config_other['bus_limit'] > 0){                //商家配置中设置的全局上限值                $bus_limit = $config_other['bus_limit'];            }        }        return $bus_limit;    }    /** 配置商家状态     * @param $status     * @return array     */    function bus_status($status='99'){        $array = array(            '-1' => array('name'=>'审核未通过','color'=>'red'),            '0' => array('name'=>'审核中','color'=>'gray'),            '10' => array('name'=>'开启','color'=>'green'),            '20' => array('name'=>'关闭','color'=>'red'),        );        if($status == 99){            return $array;        }else{            return $array[$status];        }    }    /** 解析json图片     * @param $row     * @return array|mixed     */    function formatThumb($row){        if(!isset($row['bus_ads']) || empty($row['bus_ads'])){ return $row; }        $row['bus_ads_array'] = json_decode($row['bus_ads'],true);        if($row['bus_ads_array']){            foreach($row['bus_ads_array'] as $k=>$v){                if(empty($v['path'])){                    unset($row['bus_ads_array'][$k]);                }            }        }        $row['bus_ads_array'] = array_values($row['bus_ads_array']);        return $row;    }}