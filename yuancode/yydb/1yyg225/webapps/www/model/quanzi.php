<?php/** * 圈子模型 */class quanzi_model extends Lowxp_Model{    public $power = 0; #总开关    public $max_num = 3; #最小参与人数    public $left_time = 3600; #圈子商品自动失效时间    public $reward = '5'; # 5% 揭晓后获得佣金（从其它会员参与总人次中获取）    public $baseTable = '###_yunqz';    function __construct(){        //获取配置        $config = $this->setting->value_other();        $this->left_time = (isset($config['qz_left_time']) && intval($config['qz_left_time'])) ? intval($config['qz_left_time']) : $this->left_time;        $this->reward = (isset($config['qz_reward']) && intval($config['qz_reward'])) ? intval($config['qz_reward']) : $this->reward;    }    /** 获取单条     * @param string $where     * @param string $field     * @return array|null     */    function get($where='1', $field='*'){        $where = $this->whereFormat($where);        $sql = "select $field from ".$this->baseTable." WHERE ".$where;        $row = $this->db->get($sql);        return $row;    }    /** 发起圈子需要登录     * @return array     */    function checkLogin(){        $data = array('error'=>0);        if(empty($_SESSION['mid'])){            $data['error'] = 1;            //$data['error_text'] = '请先登录！';            $data['url'] = '/member/login';        }        return $data;    }    /** 验证圈子商品     * @param $buy_id     * @param int $type 1已发起的圈子 0未发起的圈子     * @return array     */    function checkQz($buy_id, $type=0){        $data = array('error'=>0);        $buy_id = intval($buy_id);        $this->load->model('yunbuy');        $row = $this->yunbuy->yuninfo($buy_id);        if(empty($row) || $row['is_show'] == 0 || $row['gobuy'] != 2 ||            ($type == 0 && $row['qishu'] != 0) || ($type == 1 && $row['qishu'] <= 0)){            $data['error'] = 1;            $data['error_text'] = '商品信息错误！';            return $data;        }        //已发起的圈子，获取圈子设置信息        if($type == 1 && $row['qishu'] > 0){            $array = $this->get(array('qz_buy_id'=>$buy_id));            if(empty($array)){                $data['error'] = 1;                $data['error_text'] = '商品信息错误！';                return $data;            }            $row = array_merge($row, $array);        }        $data['row'] = $row;        return $data;    }    /** 发起和设置圈子时的数据验证     * @param array $options     * @param int $type 1已发起的圈子 0未发起的圈子     * @return array     */    function checkSendQz($options = array(),$type=0){        $data = array('error'=>0);        $max_num = $this->max_num;        $qz_max_num = isset($options['qz_max_num']) ? $options['qz_max_num'] : 0;        $qz_pass = isset($options['qz_pass']) ? $options['qz_pass'] : '';        //$row = isset($options['row']) ? $options['row'] : array();        if($qz_max_num < $max_num){            //不得低于配置的最大参与人数            $data['error'] = 1;            $data['error_text'] = '本商品最大参与人数不得低于'.$this->max_num.'人！';            return $data;        }        //已发布的圈子        if($type == 1){            if(strlen($qz_pass) > 0 && (floor($qz_pass)!=$qz_pass || strlen($qz_pass) != 6)){                //圈子密码为6位纯数字                $data['error'] = 1;                $data['error_text'] = '本商品圈子密码为6位纯数字！';                return $data;            }        }        //未发布的圈子        elseif($type == 0){            if(floor($qz_pass)!=$qz_pass || strlen($qz_pass) != 6){                //圈子密码为6位纯数字                $data['error'] = 1;                $data['error_text'] = '本商品圈子密码为6位纯数字！';                return $data;            }        }        return $data;    }    /** 发起和设置圈子商品     * @param array $options     * @param int $type 1已发起的圈子 0未发起的圈子     * @return array     */    function sendQz($options = array(),$type = 0){        $data = array('error'=>0);        $yun_info = isset($options['yun_info']) ? $options['yun_info'] : array();        $qz_max_num = isset($options['qz_max_num']) ? $options['qz_max_num'] : 0;        $qz_pass = isset($options['qz_pass']) ? $options['qz_pass'] : '';        $mid = isset($options['mid']) ? $options['mid'] : 0;        //已发布的圈子        if($type == 1){            $qz_buy_id = isset($options['qz_buy_id']) ? $options['qz_buy_id'] : 0;            if($qz_buy_id){                $set = array('qz_max_num'=>$qz_max_num);                if($qz_pass){                    //修改密码（有输入密码时）                    $set['qz_pass'] = $qz_pass;                }                $this->db->save($this->baseTable,$set,'',array('qz_buy_id'=>$qz_buy_id, 'qz_mid'=>$mid));            }        }        //未发布的圈子        elseif($type == 0){            //写入已发布的圈子商品            $this->load->model('yunbuy');            $qz_buy_id = $this->yunbuy->insertYunNew($yun_info, array(                'gobuy' => 2,            ));            //写入圈子商品配置            if($qz_buy_id){                //生成圈号                $row = $this->db->get("select qz_sn from ".$this->baseTable." order by qz_sn desc");                $qz_sn = !empty($row) ? ($row['qz_sn']+1) : 100;                $this->db->save($this->baseTable, array(                    'qz_sn' => $qz_sn,                    'qz_max_num' => $qz_max_num,                    'qz_pass' => $qz_pass,                    'qz_mid' => $mid,                    'qz_buy_id' => $qz_buy_id,                ));                $data['qz_buy_id'] = $qz_buy_id;            }else{                $data['error'] = 1;                $data['error_text'] = $this->L['unit_yun_team'].'发起失败！';                return $data;            }        }        return $data;    }    /** 验证参与密码     * @param array $options     * @return array     */    function checkPassQz($options = array()){        $data = array('error'=>0);        $yun_info = isset($options['yun_info']) ? $options['yun_info'] : array();        $qz_pass = isset($options['qz_pass']) ? $options['qz_pass'] : '';        //数据验证        if(floor($qz_pass)!=$qz_pass){            $data['error'] = 1;            $data['error_text'] = '请输入圈子参与密码！';            return $data;        }        //验证密码是否正确        if($qz_pass != $yun_info['qz_pass']){            $data['error'] = 1;            $data['error_text'] = '圈子参与密码错误！';            return $data;        }        //生成临时session，加入购物车后清除        $_SESSION['qz_pass'] = $qz_pass;        return $data;    }    //检查最大参拍人数    function checkMaxNum($buy_id){        $data = array('error'=>0);        $mid = $_SESSION['mid'];        $where = " and status<>1 and buy_id=".$buy_id;        $row = $this->get(array('qz_buy_id'=>$buy_id),'qz_max_num,qz_mid');        $count = $this->db->getstr("select count(distinct mid) from ###_yundb where mid!=".$row['qz_mid'].$where);        //发布者参与不限制        if($row['qz_mid'] == $mid){            $data['error'] = 0;            return $data;        }        //已经参拍的会员不再限制        $count_mid = $this->db->getstr("select count(id) from ###_yundb where mid=".$mid.$where);        if($count_mid > 0){            $data['error'] = 0;            return $data;        }        //新参拍的会员判断已经参拍人数        if($count >= $row['qz_max_num']){            $data['error'] = 1;            $data['error_text'] = "该".$this->L['unit_yun_team']."商品已达到最大参拍人数，参与失败！";            return $data;        }        return $data;    }    /** 圈子商品发布者获取佣金     * @param array $options     * @return array     */    function getReward($options = array()){        $data = array('error'=>0);        $yun_info = isset($options['yun_info']) ? $options['yun_info'] : array();        $row_qz = $this->get(array('qz_buy_id'=>$yun_info['buy_id']), 'qz_mid,qz_sn');        $this->load->model('member');        $member = $this->member->member_info($row_qz['qz_mid'],'username');        //合法验证        if(empty($yun_info) || empty($row_qz) || $yun_info['gobuy'] != 2 || ($yun_info['buy_num'] != $yun_info['need_num'])){            $data['error'] = 1;            $data['error_text'] = "ERROR";            return $data;        }        //获取其它会员参与金额之和        $where = " where status<>1 and buy_id=".$yun_info['buy_id']." and mid!=".$row_qz['qz_mid'];        $total = $this->db->getstr("select sum(`total`) from ###_yundb " . $where);        $commission = ($total * $this->reward) / 100;        if($commission){            $insert_arr = array();            $insert_arr['mid'] = $row_qz['qz_mid'];            $insert_arr['username'] = $member['username'];            $insert_arr['total'] = $total;            $insert_arr['commission'] = $commission;            $insert_arr['desc'] = $this->L['unit_yun_team']."商品揭晓获得佣金，圈号".$row_qz['qz_sn'];            $this->member->save_commission($insert_arr);        }        return $data;    }}