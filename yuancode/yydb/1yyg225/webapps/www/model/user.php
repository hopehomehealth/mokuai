<?php/** * Class user_model */class user_model extends Lowxp_Model{    private $baseTable = '###_m_user';    private $groupTable = '###_m_user_group';    function del_user($uid){    }    function select(){    }    #更新会员组    function save_usergroup(){        $post = $_POST['post'];        $id = $post['id'];        #表单处理        if(empty($post['name'])){ return array('code'=>10001, 'message'=>'请输入会员组名称!'); }        #初始值        $post['menu_list'] = implode(',',$post['menu_list']);        #重复处理        $where = ' and id!='.$id;        $res = $this->db->select("select * from ".$this->groupTable." where name='".$post['name']."'".$where);        if($res){ return array('code'=>10003, 'message'=>'会员组名称已存在，请更换!'); }        #保存        $where = array('id'=>$id);        $res = $this->db->save($this->groupTable,$post,'',$where);        if(empty($res)){ return array('code'=>10002, 'message'=>'数据操作失败!'); } //未知错误        else{ return array('code'=>0, 'type'=>'update', 'message'=>'更新成功'); } //更新成功    }    #添加一个用户    function create_user($input){        $salt = substr(uniqid(rand()), -6);        $hash_pass = $this->get_salt_hash($input['password'], $salt);        $r = $this->db->insert('###_m_user',array(            'username'=>$input['username'],            'password'=>$hash_pass,            'salt'=>$salt,            'c_time'=>RUN_TIME,            'u_time'=>RUN_TIME,            'lastlogin'=>RUN_TIME,            'ip'=>getIP(),            'group_id'=>1        ));        return $r            ? array(                'uid' => $this->db->insert_id(),                'username' => $input['username'],                'group_id' => 1            ) : $r;    }    /**     * 获取加密的密码     *     * @param $password     * @param $salt     * @param string $gsalt     * @return string     */    public function get_salt_hash($password, $salt, $gsalt='scYltK') {        $passwordmd5 = preg_match('/^\w{32}$/', $password) ? $password : md5($password);        return md5($passwordmd5.$salt.$gsalt);    }    /**     * 修改密码     * @param $oldpass     * @param $newpass     * @param $uid     * @return int     */    function alter_pass($username,$oldpass,$newpass,$uid){        $user = $this->db->query("SELECT * FROM `###_m_user` WHERE `uid` = '".intval($uid)."'")->row_array();        if(!isset($user['uid'])){            return -1;#不存在该用户        }elseif($user['password'] != $this->get_salt_hash($oldpass, $user['salt'])){            return -2;#密码错误        }else{            $setPass = $this->get_salt_hash($newpass,$user['salt']);            $this->db->update('###_m_user',array(                'username'=>$username,                'password'=>$setPass            ),array('uid'=>intval($uid)));            return $user['uid'];        }    }    #检查登录    public function check_login($username, $password){        $user = $this->db->query("SELECT * FROM `###_member` WHERE `email` = '".addslashes($username)."'")->row_array();        if(empty($user['email'])){            return -1;#不存在该邮箱        }elseif($user['password'] != $this->get_salt_hash($password, $user['salt'])){            return -2;#密码错误        }        return $user;    }}