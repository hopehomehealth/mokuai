<?php/** * 虚拟卡模型 */class virtual_model extends Lowxp_Model{    public $power = 0; #总开关    public $baseTable = '###_virtual';    public $goodsTable = '###_goods';    function __construct(){}    /** 获取单条商家信息     * @param string $where     * @param string $field     * @return array|null     */    function get($where='1', $field='*'){        $where = $this->whereFormat($where);        $sql = "select $field from ".$this->baseTable." WHERE ".$where;        $row = $this->db->get($sql);        return $row;    }    /** 给会员订单发送虚拟卡密     * @param $order_item_id 订单详情表ID     * @param $row           订单详情表数据     */    function send($order_item_id, $row){        if(!$this->power) return;        $mid = $row['mid'];        $goods_id = $row['good_id'];        $goods_number = $row['buy_num'];        if(!$mid || !$goods_id || !$goods_number || !$row['virtual'] || !$order_item_id) return;        //获取随机卡密（订单商品卡密，未发放，未过期）        $sql = "select vir_id from ".$this->baseTable." where goods_id='".$goods_id."' and vir_status=0 and (vir_time_end=0 OR (vir_time_end>0 AND vir_time_end>".time().")) order by vir_id limit ".$goods_number;        $cards = $this->db->select($sql);        $ids = array();        foreach($cards as $v){            $ids[] = $v['vir_id'];        }        if(!$ids){ return; }        $ids = implode(',',$ids);        $this->load->model('member');        $member = $this->member->member_info($mid, 'username');        $this->db->save('virtual', array(            'order_item_id' => $order_item_id,            'vir_status'    => 1,            'vir_time_win'  => time(),            'vir_mid'       => $mid,            'vir_username'  => $member['username'],        ),'',"vir_id IN($ids)");    }    /** 获取下单领取到卡密信息     * @param $item_id     * @return array     */    function getVirtual($item_id){        $list = $this->db->select("select * from ".$this->baseTable." where order_item_id=".$item_id);        if($list){            foreach($list as $k=>$v){                $v['vir_pass'] = $this->base->decrypt($v['vir_pass']);                $list[$k] = $v;            }        }        return $list;    }    /** 保存卡密     * @return array     */    function save(){        $post = $_POST['post'];        $id = $_POST['id'];        $lang = $this->lang();        //验证虚拟商品        $checkVirGoods = $this->checkVirGoods($post['goods_id']);        if($checkVirGoods['error'] > 0){            return array('code'=>10001, 'message'=>$checkVirGoods['error_text']);        }        if($id){            if(empty($post['vir_number'])){ return array('code'=>10001, 'message'=>"请填写卡号！"); }            if(empty($post['vir_pass'])){ return array('code'=>10001, 'message'=>"请填写卡密！"); }            //禁止添加重复卡号            $row = $this->get(array('vir_number'=>$post['vir_number'],'goods_id'=>$post['goods_id']),'vir_id');            if($row){ return array('code'=>10001, 'message'=>"卡号已存在！"); }            $post['vir_pass'] = $this->base->encrypt($post['vir_pass']);            $post['vir_time_end'] = $post['vir_time_end'] ? strtotime($post['vir_time_end']) : 0;            $this->db->save($this->baseTable,array(                'vir_number'   => $post['vir_number'],                'vir_pass'     => $post['vir_pass'],                'vir_time_end' => $post['vir_time_end'],            ),'',array('vir_id'=>$id));            admin_log("更新".$lang['card']."：".$post['vir_money']);            return array('code'=>0, 'message'=>$lang['card']."更新成功!");        }else{            //数据验证            $vir_pass = $_POST['vir_pass'];            if(empty($vir_pass)){ return array('code'=>10001, 'message'=>"请填写库存卡密！"); }            $vir_pass = explode("\n", $vir_pass);            //循环写入卡密            for($i=0;$i<count($vir_pass);$i++){                $row    = explode("-", $vir_pass[$i]);                $number = isset($row[0]) ? trim($row[0]) : '';                $pass   = isset($row[1]) ? trim($row[1]) : '';                if(!$number || !$pass) continue;                //卡密加密                $pass = $this->base->encrypt($pass);                $time_end = isset($row[2]) ? trim($row[2]) : '';                $time_end = $time_end ? $time_end : $post['vir_time_end'];                $time_end = $time_end ? strtotime($time_end) : 0;                //去除重复卡号                $row = $this->get(array('vir_number'=>$number,'goods_id'=>$post['goods_id']),'vir_id');                if($row) continue;                $this->db->save($this->baseTable,array(                    'goods_id'     => $post['goods_id'],                    'vir_number'   => $number,                    'vir_pass'     => $pass,                    'vir_time_add' => RUN_TIME,                    'vir_time_end' => $time_end,                ));            }            admin_log("批量生成".$lang['card']."（商品ID：".$post['goods_id']."）");            return array('code'=>0, 'message'=>$lang['card']."批量生成成功");        }    }    /** 验证虚拟商品     * @param $goods_id     * @return array     */    function checkVirGoods($goods_id){        $data = array('error'=>0);        $this->load->model('goods');        $goods_id = intval($goods_id);        $goods = $this->goods->get($goods_id, ' and virtual=1', 'id,name');        if(!$goods){            $data['error'] = 1;            $data['error_text'] = '虚拟商品不存在！';            return $data;        }        $data['goods'] = $goods;        return $data;    }    /** 获取卡状态描述     * @param $v     */    function getStatusDesc(& $v){        $v['vir_status_desc'] = '';        $row_status = $this->status();        if(in_array($v['vir_status'], array(1,2))){            if($v['vir_status'] == 2){                $v['vir_status_desc'] .= '<span class="c-gray">'.$row_status[2]['name'].'（<a href="/minfo?id='.$v['vir_mid'].'" target="_blank">'.$v['vir_username'].'</a> 于 '.date('Y-m-d H:i',$v['vir_time_use']).'）</span>';            }            $v['vir_status_desc'] .= '<span class="c-gray">'.$row_status[1]['name'].'（<a href="/minfo?id='.$v['vir_mid'].'" target="_blank">'.$v['vir_username'].'</a> 于 '.date('Y-m-d H:i',$v['vir_time_win']).'）</span>';        }        elseif($v['vir_status'] == 0){            if($v['vir_time_end'] && $v['vir_time_end'] < time()){                $v['vir_status_desc'] = '<span class="c-gray">'.$row_status[9]['name'].'</span>';            }            else{                $v['vir_status_desc'] = $row_status[0]['name'];            }        }    }    /** 卡状态配置     * @param $key     * @return array     */    function status($key=''){        $array = array(            0 => array('id'=>0, 'name'=>'未售出'),            1 => array('id'=>1, 'name'=>'已售出'),            2 => array('id'=>2, 'name'=>'已使用'),            9 => array('id'=>9, 'name'=>'已过期'),        );        if($key!==''){ return $array[$key]; }        else{ return $array; }    }    /** 临时语言包     * @param string $key     * @return array     */    function lang($key=''){        $array = array(            'card' => '卡密',        );        if($key){ return $array[$key]; }        else{ return $array; }    }}