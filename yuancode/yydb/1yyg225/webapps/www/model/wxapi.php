<?php/** * Class user_model * Name: 微信API,OAuth2.0鉴权 * Created by JetBrains PhpStorm. * User: lowxp * Date: 13-5-30 * Time: 上午9:38 * To change this template use File | Settings | File Templates. */class wxapi_model extends Lowxp_Model{    private $appid;    private $appsecret;    private $apiurl;    private $access_token;    private $_format = 'json';    //    function __construct(){        $this->load->model('debug');        $auth = $this->db->get("SELECT * FROM oauth_wx WHERE id=1");        $this->appid = $auth['appid'];        $this->appsecret = $auth['appsecret'];        $this->apiurl = $auth['apiurl'];        $this->access_token = $auth['access_token'];        if(time() - $auth['refresh_time'] + 60 > $auth['expires_in']){            //重新授权(+60,提前一分钟重新授权)            $this->debug->WriteLog("\n\n\n".'Done!');            $this->getAccessToken();        }    }    public function getSignPackage() {        $c = $this->mod == 'manage' ? $this->common : $this->site_config;        if(!$c['wx_login']) return array();        $jsapiTicket = $this->getJsApiTicket();        // 注意 URL 一定要动态获取，不能 hardcode.        $protocol = (!empty($_SERVER['HTTPS']) && $_SERVER['HTTPS'] !== 'off' || $_SERVER['SERVER_PORT'] == 443) ? "https://" : "http://";        $url = getUrl();        $timestamp = time();        $nonceStr = $this->createNonceStr();        // 这里参数的顺序要按照 key 值 ASCII 码升序排序        $string = "jsapi_ticket=".$jsapiTicket."&noncestr=".$nonceStr."&timestamp=".$timestamp."&url=".$url;        $signature = sha1($string);        $signPackage = array(            "appId"     => $this->appid,            "nonceStr"  => $nonceStr,            "timestamp" => $timestamp,            "url"       => $url,            "signature" => $signature,            "rawString" => $string        );        return $signPackage;    }    private function createNonceStr($length = 16) {        $chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";        $str = "";        for ($i = 0; $i < $length; $i++) {            $str .= substr($chars, mt_rand(0, strlen($chars) - 1), 1);        }        return $str;    }    private function getJsApiTicket() {        // jsapi_ticket 应该全局存储与更新，以下代码以写入到文件中做示例        $data = json_decode(file_get_contents(AppDir.'data/jsapi_ticket.json'));        if ($data->expire_time < time()) {            $accessToken = $this->getAccessToken();            // 如果是企业号用以下 URL 获取 ticket            // $url = "https://qyapi.weixin.qq.com/cgi-bin/get_jsapi_ticket?access_token=$accessToken";            $url = "https://api.weixin.qq.com/cgi-bin/ticket/getticket?type=jsapi&access_token=$this->access_token";            $res = json_decode($this->http($url));            $ticket = $res->ticket;            if ($ticket) {                $data->expire_time = time() + 7000;                $data->jsapi_ticket = $ticket;                $fp = fopen(AppDir.'data/jsapi_ticket.json', "w");                fwrite($fp, json_encode($data));                fclose($fp);            }        } else {            $ticket = $data->jsapi_ticket;        }        return $ticket;    }    /**     * 获取微信AccessToken     */    function getAccessToken(){        $response = $this->get('token',array(            'grant_type'=>'client_credential',            'appid'=>$this->appid,            'secret'=>$this->appsecret        ));        $this->debug->WriteLog(var_export($response,true));        if(isset($response['access_token'])){            $this->db->update('oauth_wx',array(                'access_token'=>$response['access_token'],                'refresh_time'=>time(),                'expires_in'=>$response['expires_in']            ),array('id'=>'1'));            $this->access_token = $response['access_token'];        }else{            $this->access_token = null;            //logfile:授权失败        }    }    /**     * 获取用户信息     * @param $openid     * @return mixed     */    function userInfo($openid, $access_token='') {        $url    = "https://api.weixin.qq.com/cgi-bin/user/info";        $params = array('access_token' => $this->access_token, 'openid' => $openid);        $res    = $this->http($url, 'get', $params);        if ($this->_format == 'json') {            $data = json_decode($res, true);            if (!$data['subscribe'] && $access_token) {                $url    = "https://api.weixin.qq.com/sns/userinfo";                $params = array('openid' => $openid, 'access_token' => $access_token);                $res    = $this->http($url, 'get', $params);                $data   = json_decode($res, true);            }            return $data;        } else {            return $res;        }        //return $this->get('/sns/userinfo',array('openid'=>$openid));    }    /**     * @param string $next_openid     * @return mixed     */    function userget($next_openid = ''){        $params = array();        if(!empty($next_openid)){            $params = array('next_openid'=>$next_openid);        }        return $this->get('user/get',$params);    }    function groupsGet(){        return $this->get('groups/get');    }    function groupsCreate($group_name){        return $this->post('groups/create',array('name'=>$group_name));    }    function groupsUpdate($groupid, $group_name){        return $this->post('groups/update',array('id'=>$groupid,'name'=>$group_name));    }    function groupsMembersUpdate($openid, $to_groupid){        return $this->post('groups/members/update',array('openid'=>$openid,'to_groupid'=>$to_groupid));    }    /**     * 发布菜单.     * @return mixed     */    function menuCreate(){        //Content-Type=text/xml        $row = $this->db->get("SELECT json FROM wx_menu_data WHERE  id = 1");        $menu_arr = json_decode($row['json'],true);        $data = array();        $events = array();        foreach($menu_arr['button'] as $key=>$row){            if(empty($row['sub_button'])){                $data[$key]['type'] = $row['type']=='view' ? 'view' : 'click';            }            $data[$key]['name'] =  $row['name'];            if(!empty($row['sub_button']) && is_array($row['sub_button'])){                //有子菜单                $sub_button = array();                foreach($row['sub_button'] as $k=>$v){                    $sub_button[$k]['type'] = $v['type']=='view' ? 'view' : 'click';                    $sub_button[$k]['name'] =  $v['name'];                    if($v['type']=='view'){                        $sub_button[$k]['url'] =  $v['data'];                    }else{                        $sub_button[$k]['key'] =  $v['key'];                        $events[$v['key']] = array(                            'type'=>$v['type'],                            'key'=>$v['key'],                            'data'=>$v['data']                        );                    }                }                $data[$key]['sub_button'] = $sub_button;            }else{                //没子菜单                if($row['type']=='view'){                    $data[$key]['url'] =  $row['data'];                }else{                    $data[$key]['key'] =  $row['key'];                    $events[$row['key']] = array(                        'type'=>$row['type'],                        'key'=>$row['key'],                        'data'=>$row['data']                    );                }            }        }        //提交相关事件到发布设置中.        $this->db->update('wx_menu_data',array('release'=>json_encode($events)),array('id'=>'1'));        $export['button'] = $data;        $data = json_encode($export);        $data = preg_replace("#\\\u([0-9a-f]{4}+)#ie", "iconv('UCS-2BE', 'UTF-8', pack('H4', '\\1'))", $data);        $response = $this->http($this->apiurl.'menu/create?access_token='.$this->access_token,'post',$data);        if($this->_format=='json'){            return json_decode($response,true);        }else{            return $response;        }    }    /**     * 生成二维码     */    function createQrCode(){        #/qrcode/create?access_token=TOKEN        $this->post('qrcode/create');        $params = array(            'action_name'=>"QR_LIMIT_SCENE",            'action_info'=>array(                'scene'=>array(                    'scene_id'=>1                )            ),        );        $data = json_encode($params);        $res = $this->http($this->apiurl.'qrcode/create?access_token='.$this->access_token,'post',$data);    }    /**     * 查询微信菜单     */    function viewMenu(){        return  $this->http($this->apiurl.'menu/get?access_token='.$this->access_token,'get');    }    /**     * 调用方法     * @param $api     * @param string $method     * @param array $params     * @return mixed     */    function call($api, $method='get', $params=array()){        $url = $this->apiurl.trim($api,'/');        //请求增加access_token参数        $params = array_merge($params,array('access_token'=>$this->access_token));        $res = $this->http($url, $method, $params);        if($this->_format == 'json'){            $data = json_decode($res,true);            if(isset($data['errcode'])){                //logFile('api,$mthod,错误代码,参数',返回信息$res)            }            return $data;        }else{            return $res;        }    }    function get($api, $params=array()){        $response = $this->call($api,'get',$params);        return $response;    }    function post($api, $params=array()){        return $this->call($api,'post',$params);    }    /**     * 发起HTTP请求     * @param $url     * @param string $method     * @param array $params     * @return mixed     */    function http($url, $method = 'get', $params = array(),$error=0){        $ch = curl_init();        curl_setopt($ch, CURLOPT_HTTP_VERSION, CURL_HTTP_VERSION_1_1);        curl_setopt($ch, CURLOPT_HEADER, 0); #返回头部信息        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);        curl_setopt($ch, CURLOPT_TIMEOUT, 30);        //取消SSL验证        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER,false);        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST,false);        $HttpHeader = array(            'User-Agent: Mozilla/5.0 (Windows NT 6.1; rv:16.0) Gecko/20100101 Firefox/16.0',            'Accept: application/json, text/javascript, */*; q=0.01',            'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',            'Accept-Language: zh-cn,zh;q=0.8,en-us;q=0.5,en;q=0.3',            'Connection: keep-alive',            'Pragma: no-cache',            'Cache-Control: no-cache',            #'X-Requested-With: XMLHttpRequest',        );        if (strtolower($method) == 'post'){            if(is_array($params)){                $fields = http_build_query($params);            }else{                //咱用于微信发送无参数的纯文本数据                $HttpHeader[] = 'Content-Type: text/xml';                $fields = $params;            }            curl_setopt($ch, CURLOPT_POST, 1);            curl_setopt($ch, CURLOPT_POSTFIELDS, $fields);        }else{            //Get请求,处理地址中包含的参数.            $segments = parse_url($url);            if(isset($segments['query']) && $segments['query']!=''){                parse_str($segments['query'],$params2);                $params = array_merge($params, $params2);            }            $fields = http_build_query($params);            $url = $segments['scheme'].'://'.$segments['host'].$segments['path'];            if($fields!='')$url = $url.'?'.$fields;            curl_setopt($ch, CURLOPT_HTTPGET, 1);        }        curl_setopt($ch, CURLOPT_URL, $url);        curl_setopt($ch, CURLOPT_HTTPHEADER, $HttpHeader);        $ret = curl_exec($ch);        if ($error){            print curl_error($ch);        }        curl_close($ch);        return $ret;    }    /**     * 发送文本消息     * @param string $toUser 接收信息者的openId     * @param string $text 信息内容     * @return mixed 正确或错误的返回码     */    public function sendTextMessage($toUser,$text){        $url = "https://api.weixin.qq.com/cgi-bin/message/custom/send?access_token=$this->access_token";        $jsonStr = '{                        "touser":"'.$toUser.'",                        "msgtype":"text",                        "text":                        {                             "content":"'.$text.'"                        }                    }';        $res = $this->postJson($url,$jsonStr);        return $res;    }    /**     * 发送模板消息     * @param string $openId 用户OPENID     * @param string $templateId 模板ID     * @param string $reurl 详情的URL地址     * @param array $data 消息主体内容，不同的模板不一样,具体模板格式登录公众号查找相应的模板文档     * @return mixed     */    public function sendTemplateMessage($openId,$templateId,$reurl,$data){        $url='https://api.weixin.qq.com/cgi-bin/message/template/send?access_token='.$this->access_token;        $arr = array(            'touser'=>$openId,            'template_id'=>$templateId,            'url'=>$reurl,            'data'=>$data        );        $res = $this->postJson($url,json_encode($arr));        return $res;    }    /**     * 以post方式发送json格式的数据     * @param string $url     * @param string $jsonStr     * @return mixed     */    protected function postJson($url,$jsonStr){        $ch = curl_init($url);        curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "POST");        curl_setopt($ch, CURLOPT_POSTFIELDS,$jsonStr);        curl_setopt($ch, CURLOPT_RETURNTRANSFER,true);        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER,false);        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST,false);        curl_setopt($ch, CURLOPT_HTTPHEADER, array(                'Content-Type: application/json',                'Content-Length: ' . strlen($jsonStr))        );        $result = curl_exec($ch);        return $result;    }}