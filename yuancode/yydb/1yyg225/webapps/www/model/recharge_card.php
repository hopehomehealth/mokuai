<?php/** * Class recharge_card_model */class recharge_card_model extends Lowxp_Model{    public $baseTable = '###_recharge_card';    /** 获取单条充值卡     * @param string $where     * @param string $field     * @return array|null     */    function get($where='1', $field='*'){        $where = $this->whereFormat($where);        $sql = "select $field from ".$this->baseTable." WHERE ".$where;        $row = $this->db->get($sql);        return $row;    }    /** 卡号卡密验证及状态判断     * @param $post     * @param int $type 0默认通过卡号卡密验证     * @return array     */    function check_status($post, $type=0){        $data = array('error'=>0, 'error_text'=>'');        //$post数据        $number = isset($post['number']) ? trim($post['number']) : '';        $password = isset($post['password']) ? trim($post['password']) : '';        $row = $this->get(array('vr_number'=>$number));        if(!$row['vr_pass']){            //验证卡号            return array('error'=>1, 'error_text'=>'卡号或卡密错误！');        }else{            $vr_pass = $this->base->decrypt($row['vr_pass']);            if($vr_pass != $password){                //验证卡密                return array('error'=>2, 'error_text'=>'卡号或卡密错误！');            }        }        //已消费        if($row['vr_status'] == 1){            return array('error'=>3, 'error_text'=>'充值卡不存在！');        }        //已过期        if($row['vr_time_end'] > 0 && $row['vr_time_end'] < time()){            return array('error'=>4, 'error_text'=>'充值卡不存在！');        }        return $data;    }    #保存充值卡    function save(){        $post = $_POST['post'];        $id = $_POST['id'];        $card_number = isset($_POST['card_number']) ? intval($_POST['card_number']) : 0;        $vr_time_end = intval($_POST['vr_time_end']);        $lang_card = $this->lang();        if(empty($post['vr_money'])){ return array('code'=>10001, 'message'=>"请输入卡面值！"); }        //有效期限转换        if($vr_time_end > 0){            $post['vr_time_end'] = RUN_TIME + $vr_time_end * 24 * 3600;        }else{            //永久有效            $post['vr_time_end'] = 0;        }        if($id){            /** 单条更新充值卡 **/            //已使用，已过期的不可再更新            $row = $this->get(array('id'=>$id));            if($row['vr_status'] == 1 || $row['vr_time_use']){                return array('code'=>10001, 'message'=>"已使用，不可再更新！");            }            if($row['vr_time_end'] > 0 && $row['vr_time_end'] < time()){                return array('code'=>10001, 'message'=>"已过期，不可再更新！");            }            $this->db->save($this->baseTable,array(                'vr_money'    => $post['vr_money'],                'vr_type'     => $post['vr_type'],                'vr_status'   => $post['vr_status'],                'vr_online'   => isset($post['vr_online']) ? $post['vr_online'] : 0,                'vr_time_end' => $post['vr_time_end'],            ),'',array('id'=>$id));            admin_log("更新充值卡：".$row['vr_number']);            return array('code'=>0, 'message'=>$lang_card['card']."更新成功!");        }else{            /** 批量发放充值卡 **/            if(empty($card_number)){ return array('code'=>10001, 'message'=>"请输入发放数量！"); }            //获取最大批次            $vr_batch = $this->db->getstr("select vr_batch from ".$this->baseTable." order by vr_batch desc");            if(!$vr_batch){ $vr_batch = 0; }            $vr_batch++;            //添加年月            $ym = date('ym');            //开始发放            for($i=0;$i<$card_number;$i++){                //生成卡号：批次+年月+自增值（批次小于3位，单次发卡数量为6位数时，卡号为13位，可以更大）                $vr_number = $ym.'000000';                $vr_number = str_pad($vr_batch,3,'0',STR_PAD_LEFT).bcadd($vr_number, $i+1);                //生成卡密：加密存入                $vr_pass = $this->get_vr_pass(15);                $vr_pass = $this->base->encrypt($vr_pass);                $this->db->save($this->baseTable,array(                    'vr_number'   => $vr_number,                    'vr_pass'     => $vr_pass,                    'vr_money'    => $post['vr_money'],                    'vr_type'     => $post['vr_type'],                    'vr_status'   => $post['vr_status'],                    'vr_online'   => isset($post['vr_online']) ? $post['vr_online'] : 0,                    'vr_time_add' => RUN_TIME,                    'vr_time_end' => $post['vr_time_end'],                    'vr_batch'    => $vr_batch,                    'vr_time_use' => '',                    'mid'         => 0,                ));            }            admin_log("批量发放".$lang_card['card'].$card_number."张（第".$vr_batch."批）");            return array('code'=>0, 'message'=>$lang_card['card']."发放成功!");        }    }    //配置充值卡类型    function vr_type($key = ''){        $array = array(            1=>'元',            2=>$this->L['unit_db_points'],        );        if($key){ return $array[$key]; }        else{ return $array; }    }    //配置充值卡有效期    function vr_time_end($key = ''){        $array = array(            0=>'永久有效',            1=>'一天',            7=>'一周',            15=>'半个月',            30=>'一个月',            90=>'三个月',            365=>'一年',            730=>'两年',        );        if($key){ return $array[$key]; }        else{ return $array; }    }    //临时语言包    function lang($key=''){        $array = array(            'card' => '充值卡',        );        if($key){ return $array[$key]; }        else{ return $array; }    }    //生成充值卡密钥    function get_vr_pass($length){        $str = null;        $strPol = "ABCDEFGHIJKLMNPQRSTUVWXYZ123456789";        $max = strlen($strPol)-1;        for($i=0;$i<$length;$i++){    $str.=$strPol[rand(0,$max)];    }        return $str;    }}