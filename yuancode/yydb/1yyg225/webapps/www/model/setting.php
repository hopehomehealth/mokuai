<?php/** * Class setting_model */class setting_model extends Lowxp_Model{    private $baseTable = '###_config';    function __construct(){ }    //获取设置 配置    function value($varname='', $value='', $langid=''){        $array = array();        $data = $this->base->read_static_cache('web_config');        if ($data === false)        {            $res = $this->db->select("SELECT varname,value FROM ".$this->baseTable);            if(!empty($res)){                foreach($res as $v){                    $array[$v['varname']] = $v['value'];                }            }            $this->base->write_static_cache('web_config', $array);        }else{            $array = $data;        }        //模板配置合并到site_config        $data_skin = $this->get_skin();        $array['hide_bidCount'] = isset($data_skin['hide_bidCount']) ? $data_skin['hide_bidCount'] : 0;        $array['index_skin'] = isset($data_skin['index_skin']) ? $data_skin['index_skin'] : 1;        return $array;    }    //获取配置    function value_other(){        $array = array();        $data = $this->base->read_static_cache('config_other');        if ($data === false)        {            $res = $this->db->select("SELECT varname,value FROM ###_config_other");            if(!empty($res)){                foreach($res as $v){                    $array[$v['varname']] = $v['value'];                }            }            $this->base->write_static_cache('config_other', $array);        }else{            $array = $data;        }        return $array;    }    //获取模板    function get_skin(){        $array = array(            'pc_skin' => 'cn',            'mobile_skin' => 'cn',            'index_skin' => 1,            'cli_skin' => 1,        );        $data = $this->base->read_static_cache('skin','');        if ($data === false || empty($data)){            $data = $array;            $this->base->write_static_cache('skin',$array,'');        }        return array_merge($array, $data);    }    //获取配置，格式化数据，用于form_field    function formInfo($group){        $dataTable = $this->baseTable;        $rows = $this->db->select("SELECT * FROM $dataTable WHERE `lang` IN(0,".LANG_ID.") AND `group`='$group' ORDER BY listorder");        $array = array();        foreach($rows as $k=>$val){            $val['setup'] = json_decode($val['step'],true);            $val['type'] = $val['form_type']?$val['form_type']:'text';            $val['field'] = $val['varname'];            unset($val['step'],$val['form_type'],$val['varname']);            $array[$val['field']] = $val;        }        return $array;    }    //更新配置    function update($post){        $res = false;        #表单验证        $return = $this->checkfield($post);        if(!empty($return['error'])){ return $return['error']; }        $post = $return['post'];        foreach($post as $k=>$v){            $k = trim($k);            $v = is_array($v) ? implode(',', $v) : trim($v);            $where = "varname='$k' AND lang IN(0,".LANG_ID.")";            //统计代码标签转义            if($k == 'cnnz'){                $v = htmlspecialchars($v);            }            $data['value'] = $v;            $res = $this->db->save($this->baseTable,$data,'',$where);        }        if(empty($res)){ return array('code'=>10002, 'message'=>'数据操作失败!'); } //未知错误        else{            admin_log('更新站点配置');            $this->base->clear_caches('static');            return array('code'=>0, 'type'=>'update', 'message'=>'更新成功');        }    }    //更新手动配置表    function update_other($post){        $res = false;        #表单验证        foreach($post as $k=>$v){            $k = trim($k); $v = trim($v);            $where = "varname='$k' AND lang IN(0,".LANG_ID.")";            $data['varname'] = $k;            $data['value'] = trim($v);            $row = $this->db->get("select * from ###_config_other where ".$where);            if(!$row){                $where = '';            }            $res = $this->db->save('config_other',$data,'',$where);        }        if(empty($res)){ return array('code'=>10002, 'message'=>'数据操作失败!'); } //未知错误        else{            admin_log('更新手动配置表');            $this->base->clear_caches('static');            return array('code'=>0, 'type'=>'update', 'message'=>'更新成功');        }    }    #处理并验证post数据    function checkfield($postdata){        $fields = $this->formInfo($postdata['group']);        $error = '';        foreach($postdata as $key=>$val){            $key = trim($key);            $val = trim($val);            if(in_array($fields[$key]['type'],array('image','file','images','files'))){                $arrData = array();                if(is_array($postdata[$key])){                    foreach($postdata[$key]['path'] as $k=>$v){                        $arrData[$k]['path'] = $v;                        $arrData[$k]['title'] = $postdata[$key]['title'][$k];                    }                }                $postdata[$key] = json_encode($arrData);            }        }        return array('post'=>$postdata,'error'=>$error);    }    //添加自定义变量    function add($post){        #表单处理        if(empty($post['varname'])){ return array('code'=>10001, 'message'=>'请输入变量名称!'); }        if(empty($post['title'])){ return array('code'=>10001, 'message'=>'请输入变量介绍!'); }        #重复处理        $res = $this->db->select("select * from ".$this->baseTable." where varname='".$post['varname']."' AND lang IN(0,".LANG_ID.")");        if($res){ return array('code'=>10003, 'message'=>'变量名称已经存在，请更换!'); }        #默认值        $post['user'] = 1;        $post['lang'] = LANG_ID;        #排序值在添加的分组下最大值上加1        $res_max = $this->db->get("SELECT MAX(`listorder`) AS max FROM ".$this->baseTable." WHERE `group`='".$post['group']."' AND `lang` IN(0,".LANG_ID.")");        $post['listorder'] = (int) $res_max['max']+1;        #保存        $res = $this->db->save($this->baseTable,$post,'');        if(empty($res)){ return array('code'=>10002, 'message'=>'数据操作失败!'); } //未知错误        else{            admin_log('添加站点配置变量：'.$post['title']);            $this->base->clear_caches('static');            return array('code'=>0, 'type'=>'insert', 'message'=>'自定义变量添加成功');        }    }    //增加参拍人数    function logCount($num=1){        $this->db->update($this->baseTable, "value=value+$num", array('varname'=>'logCount'));        $logCount = $this->db->getstr("SELECT value FROM ".$this->baseTable." WHERE varname='logCount' LIMIT 1");        #单独写入缓存        $this->base->write_static_cache('bidcount', array('logCount'=>$logCount), '');    }    /**     * 根据设备类型显示对应的页面(手机,网页)     * @return string     */    function getTplByDevice(){        $tpl = $tplTrue = '';        $www = getUrl('www');        //保存真实的终端        if($this->useragent->is_mobile()) $tplTrue = 'mobile';        define('STPLTRUE',$tplTrue);        if($www=='m'){ $tpl = 'mobile'; }        elseif(!isset($_GET['tpl']) && !isset($_SESSION['tpl'])){ $tpl = $tplTrue; }        elseif(isset($_GET['tpl']) && in_array(trim($_GET['tpl']),array('pc','mobile'))){ $_SESSION['tpl'] = $tpl = trim($_GET['tpl']); }        elseif(isset($_SESSION['tpl'])){ $tpl = $_SESSION['tpl']; }        $tpl = in_array($tpl,array('pc','mobile')) ? $tpl : '';        $tpl = ($tpl=='pc') ? '' : $tpl;        $default_skin = 'cn';  //默认皮肤        $data['skin'] = $default_skin;  //当前皮肤        $data['tpl'] = $tpl;    //当前终端        //更换模板        $data_skin = $this->get_skin();        if($data_skin['cli_skin'] == 2){            //终端模板            $data['tpl'] = $tpl = 'mobile';        }        if(isset($_GET['skin']) && $_GET['skin'] && isset($data_skin['change_skin']) && $data_skin['change_skin']){ //临时切换模板            $_SESSION['pc_skin'] = $_GET['skin'];        }        if(isset($_SESSION['pc_skin']) && trim($_SESSION['pc_skin'])){ //session记录临时模板            $data_skin['pc_skin'] = $_SESSION['pc_skin'];        }        if($data_skin['pc_skin'] && $data_skin['pc_skin'] != $default_skin && !$tpl){ //转PC模板            $data['skin'] = 'skin/'.$data_skin['pc_skin'];        }        if($data_skin['mobile_skin'] && $data_skin['mobile_skin'] != $default_skin && $tpl == 'mobile'){ //转移动端模板            $data['skin'] = 'skin/'.$data_skin['mobile_skin'];        }        //模板不存在时，返回默认模板        if(!is_dir(AppDir.'views/'.$data['skin'])){            $data['skin'] = 'cn';        }        //当前模板        define('CUR_SKIN', str_replace('skin/','',$data['skin']));        return $data;    }}