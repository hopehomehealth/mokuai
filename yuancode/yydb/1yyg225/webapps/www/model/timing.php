<?php/** * Class timing_model */class timing_model extends Lowxp_Model{    function __construct(){}    //发布竞拍开奖号    function save(){        $post = $_POST['post'];        $now = date('Y-m-d');        //$now = '2015-04-08';        #判断今日是否有发布        $sql = "SELECT id FROM ###_cod WHERE addtime='".strtotime($now)."'";        if($this->db->get($sql)){            return array('code'=>10002, 'message'=>'今日已发布开奖!');        }        #初始值 格式化        $post['addtime'] = strtotime($now);        if($post['nexttime']){            $post['nexttime'] = strtotime($post['nexttime']);        }else{            $now2 = strtotime('+1 days');            $now2 = date('Y-m-d', $now2);            $post['nexttime'] = strtotime($now2);        }        $post['cod'] = preg_replace('/\D/','',$post['cod']);        #表单处理        if(empty($post['cod'])){ return array('code'=>10001, 'message'=>'请输入当期开奖号!'); }        if($this->base->validate($post['cod'],'number')==false || strlen(trim($post['cod'])) != 6){            return array('code'=>10001, 'message'=>'开奖号必须为6位数字!');        }        #保存        $res = $this->db->save('cod',$post,'');        if(empty($res)){ return array('code'=>10002, 'message'=>'数据操作失败!'); }                admin_log("发布".$this->L['unit_pay']."开奖号：".$post['cod']);        #TODO:SHF:开奖处理        set_time_limit(0);        $logList = $this->codList(0,$now);        $logSms = array();        $ids = array();        $sqlUpdate = "";        foreach($logList AS $v){            $ext_info = unserialize($v['ext_info']);            $v = array_merge($v, $ext_info);            $status = $this->isCod($post['cod'], $v);            if($status == 1){                $logSms[] = $v;            }            $data = array(                'status' => $status,                'cod_time' => RUN_TIME,                'cod_true' => $post['cod'],                'win'      => $v['win'],            );            $this->db->update('auction_log',$data,array('log_id'=>$v['log_id']));        }        #发送中奖通知        $setting = $this->setting->value("'sms_open'");        foreach($logSms as $v){            $this->smarty->assign('username',$v['username']);            $this->smarty->assign('goodsname',$v['title']);            #发送中奖短信            if($logSms && $setting['sms_open']==1 && statusTpl('sms_cod')){                $this->load->library('sms');                $content = $this->sms->sendSmsTpl($v['mobile'], 'sms_cod', 1);                if($content){                    $data = array(                        'mid'  => $v['bid_user'],                        'content'  => $content,                        'type'  => 'sms',                        'template_code'  => 'sms_cod',                        'staus'  => 0,                        'add_time'  => time(),                    );                    $this->db->save('send',$data);                }            }            #发送中奖邮件            if($v['email'] && 1==2){                $this->load->library('mail');                $content = $this->mail->sendMailTpl($v['email'],'mail_cod',1);                if($content){                    $data = array(                        'mid'  => $v['bid_user'],                        'content'  => $content,                        'type'  => 'mail',                        'template_code'  => 'mail_cod',                        'staus'  => 0,                        'add_time'  => time(),                    );                    $this->db->save('send',$data);                }            }        }        return array('code'=>0, 'type'=>'insert', 'message'=>'发布成功');    }    /** 获取需要开奖的出价记录     * @param int $type =1只获取剩余数量     * @return array     */    function codList($type=0,$now=''){        $now = $now?$now:date('Y-m-d');        $end_time = strtotime($now . ' 14:00:00');        $where = "WHERE a.first=1 AND a.status=0 AND a.bid_time<'$end_time'";        if($type==1){            $sql = "SELECT COUNT(*) FROM ###_auction_log AS a " . $where;            $count = $this->db->getstr($sql);            return $count;        }else{            $sql = "SELECT a.*,g.ext_info,m.mobile,m.username,g.title,m.email FROM ###_auction_log AS a " .                "LEFT JOIN ###_goods_activity AS g ON g.act_id=a.act_id " .                "LEFT JOIN ###_member AS m ON m.mid=a.bid_user " . $where;            $list = $this->db->select($sql);            return $list;        }    }    /** 根据中奖概率判断是否中奖     * @param $cod     * @param $auction     * @return int     */    function isCod($cod_true,$auction){        $cod = $auction['cod'];        if(empty($auction['cod'])){            return -1;        }        $act_id = $auction['act_id'];        $win = $auction['win'];        $winNum = $auction['winnum'];        $status = 0;        if($winNum > 0){ //限制中奖数            $this->load->model('auction');            $count = $this->auction->logList(0,1,$act_id,0,AllWIN);            if($count >= $winNum){                return -1;            }        }elseif($winNum == 0){ //不设置中奖数            return -1;        }        switch($win){            case 0.01:                $a = substr($cod,-4);                $b = substr($cod_true,-4);                if($a==$b) $status=1;                else $status=-1;                break;            case 0.05:                $a = substr($cod,0,1);                $b = substr($cod_true,2,1);                $c = substr($cod,-3);                $d = substr($cod_true,-3);                if((($a%2==0&&$b%2==0) || ($a%2==1&&$b%2==1)) && $c==$d) $status=1;                else $status=-1;                break;            case 0.1:                $a = substr($cod,-3);                $b = substr($cod_true,-3);                if($a==$b) $status=1;                else return $status=-1;                break;            case 0.5:                $a = substr($cod,0,1);                $b = substr($cod_true,2,1);                $c = substr($cod,-2);                $d = substr($cod_true,-2);                if((($a%2==0&&$b%2==0) || ($a%2==1&&$b%2==1)) && $c==$d) $status=1;                else $status=-1;                break;            case 1:                $a = substr($cod,-2);                $b = substr($cod_true,-2);                if($a==$b) $status=1;                else $status=-1;                break;            case 5:                $a = substr($cod,0,1);                $b = substr($cod_true,2,1);                $c = substr($cod,-1);                $d = substr($cod_true,-1);                if((($a%2==0&&$b%2==0) || ($a%2==1&&$b%2==1)) && $c==$d) $status=1;                else $status=-1;                break;            case 10:                $a = substr($cod,-1);                $b = substr($cod_true,3,1);                if($a==$b) $status=1;                else $status=-1;                break;            case 20:                $a = substr($cod,-1);                $b = substr($cod_true,3,1);                if($a==$b || ($a+5)==$b || $a==($b+5)) $status=1;                else $status=-1;                break;            case 50:                $a = substr($cod,0,1);                $b = substr($cod_true,2,1);                if(($a%2==0 && $b%2==0) || ($a%2==1&&$b%2==1)) $status=1;                else $status=-1;                break;            case 100:                $status=1;                break;            default:                $status=-1;                break;        }        return $status;    }    function httpVerify(){        $data = read_static_cache('httpverify', '');        //缓存10分钟过期        if($data === false || $data['time'] + 600 < time()){            $authUrl = 'http://auth.aiwopai.com/api/httpverify';            $data = $this->curlPost($authUrl);            $data['time'] = time();            $this->base->write_static_cache('httpverify', $data, '');        }        return $data;    }    /** 联机函数     * @param $authUrl     * @param array $arrayJia 增加POST参数     * @return mixed     */    function curlPost($authUrl,$arrayJia=array()){        $host = isset($_SERVER['HTTP_HOST'])?$_SERVER['HTTP_HOST']:$_SERVER['SERVER_NAME'];        $host = str_replace('www.','',$host);        $postData = array(            'key' => AuthKey,            'domain' => Domain,            'host'   => $host,            'version' => Version,            'server_software' => $_SERVER['SERVER_SOFTWARE'],            'server_addr' => $_SERVER['SERVER_ADDR'],            'document_root' => $_SERVER['DOCUMENT_ROOT'],            'server_admin' => $_SERVER['SERVER_ADMIN'],            'php_version' => PHP_VERSION,            'php_os' => PHP_OS,        );        if(!empty($arrayJia)){            $postData = array_merge($postData, $arrayJia);        }        $data = curlPost($postData, $authUrl);        $data = json_decode($data, true);        return $data;    }    /**     * 检查虚拟商品卡密库存     */    function checkVirGoods(){        $data = array();        $stock_min = 10; //检查最小库存        $sql = "select id as g_id,name as g_name from ###_goods where virtual=1";        $list = $this->db->select($sql);        if($list){            foreach($list as $k=>$v){                $v['count'] = $this->db->getstr("SELECT COUNT(vir_id) FROM ###_virtual WHERE vir_status=0 AND ((vir_time_end>0 AND vir_time_end<".time().") OR vir_time_end=0) AND goods_id='".$v['g_id']."'");                if($v['count'] > $stock_min){                    unset($list[$k]);                }                $list[$k] = $v;            }        }        $data['stock_min'] = $stock_min;        $data['list'] = $list;        return $data;    }}