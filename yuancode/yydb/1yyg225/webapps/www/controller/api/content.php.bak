<?php/** * ZZCMS 模型内容页 * ============================================================================ * * 版权所有 2014-2016 厦门紫竹数码科技有限公司，并保留所有权利。 * 网站地址: http://www.lnest.com； * ---------------------------------------------------------------------------- * 这不是一个自由软件！您只能在不用于商业目的的前提下对程序代码进行修改和 * 使用；不允许对程序代码以任何形式任何目的的再发布。 */class content extends Lowxp {    function __construct() {        parent::__construct();        $this->load->model('content');        $this->load->model('category');        $this->load->model('form_field');        $this->load->model('yunbuy');    }    /* #封面或列表页     * $data.cat 当前栏目信息     * $data.row 当前栏目信息 主要用于display_before seo信息提取     * $data.page 单页内容信息     * $data.catlist 所有父类ID     */    function index($catid, $page = 1) {        #栏目信息        if (!is_numeric($catid)) {            $m = $catid;        } else {            $data['row'] = $data['cat'] = $this->category->get($catid);            if (!$data['cat']) {                showError('访问错误，栏目不存在');                die;            }            $m = $data['cat']['module'];        }        $this->chkModule($m);        $where = ' WHERE lang=' . LANG_ID;        #提交表单        if (isset($_POST['Submit'])) {            #在线留言同IP一天只能留言一次            if ($m == 'gbook') {                //$this->exeJs("parent.layer.msg('抱歉，暂不开放留言功能！');");die;                $_POST['post']['ip'] = getIP();                $sql = "SELECT ip FROM ###_gbook WHERE createtime>'" . strtotime('-1 days') . "' AND `ip`='" . getIP() . "'";                if ($this->db->get($sql)) {                    $this->exeJs("parent.layer.msg('24小时内您已留言，请明天再试哦！')");                    die;                }                $_POST['post']['name'] = trim($_POST['post']['name']);                $_POST['post']['email'] = trim($_POST['post']['email']);                $_POST['post']['content'] = trim($_POST['post']['content']);                if ($_POST['post']['content'] == '您希望上架的产品链接' || $_POST['post']['name'] == '您的姓名或昵称' || $_POST['post']['email'] == '您的联系方式') {                    $this->exeJs("parent.layer.msg('表单填写不完整！');");                    die;                }                //有html标签提示                if ($_POST['post']['content'] != strip_tags($_POST['post']['content']) || $_POST['post']['name'] != strip_tags($_POST['post']['name']) || $_POST['post']['email'] != strip_tags($_POST['post']['email'])) {                    $this->exeJs("parent.layer.msg('表单内容不合法，请清除HTML标签！');");                    die;                }                $_POST['post']['name'] = $this->base->safe_replace($_POST['post']['name']);                $_POST['post']['email'] = $this->base->safe_replace($_POST['post']['email']);                $_POST['post']['content'] = $this->base->safe_replace($_POST['post']['content']);                $res = $this->content->save();            }            if (isset($res['code']) && $res['code'] == 0) {                $this->exeJs("parent.layer.msg('留言成功',2,{type:1});");                $this->refresh(0, true);            } else {                $this->exeJs("parent.layer.msg('" . $res['message'] . "')");            }            exit;        }        #所有父类ID        $data['catlist'] = $this->category->parentArr($catid);        #单页        if ($m == 'page') {            $where .= " AND id=" . $catid;            $data['page'] = $this->db->get("SELECT * FROM ###_" . $m . $where);            #更新点击            if ($this->fieldsinfo['hits']) {                $this->db->update($m, 'hits=hits+1', array('id' => $catid));            }        }        #模型列表        else {            #内容列表条件            if ($this->fieldsinfo['status']) {                $where .= " AND `status`=1";            }            if ($catid && $this->fieldsinfo['catid']) {                $where .= " AND `catid`" . $this->category->condArrchild($catid);            }            #筛选            if ($_GET['act'] == 'search') {                $listsearch = array('title', 'decription', 'content', 'catid');                $conds = $this->content->getConds($listsearch);                $where .= count($conds) ? ' AND ' . implode(' AND ', $conds) : '';            }            #内容列表字段            $fields = $this->moduleinfo['listfields'];            $fields = empty($fields) ? '*' : $fields;            #分页            $this->load->model('page');            $_GET['page'] = intval($page);            $pagesize = $data['cat']['pagesize'] ? (int) $data['cat']['pagesize'] : (int) $this->site_config['page_size'];            $this->page->set_vars(array('per' => $pagesize));            #内容列表结果            $sql = "SELECT * FROM ###_" . $m . $where . " ORDER BY listorder DESC,id DESC";            $data['list'] = $this->page->hashQuery($sql, $catid . '/')->result_array();        }        #发送变量        $this->smarty->assign('fieldsinfo', $this->fieldsinfo);        $this->smarty->assign('data', $data);        $this->display_before($data['row']);        #显示模板        $template = 'list';        if ($data['row']['listtype'] == 2)            $template = 'form';        if ($data['row']['listtype'] == 1 || $m == 'page')            $template = 'index';        if ($data['row']['listtype'] == 0)            $template = 'list';        $template = !empty($data['row']['template_list']) ? $data['row']['template_list'] : $template;        $this->smarty->assign('page_data_id', isset($catid) ? $catid : 0);        $tpl = $m . '_' . $template . '.html';        $this->smarty->display($tpl);    }    /* #详情页     * $data.cat 所属栏目信息     * $data.row 内容信息     * $data.catlist 所有父类ID     */    function show($catid, $id) {        #栏目信息        $data['cat'] = $this->category->get($catid);        if (!$data['cat']) {            showError('访问错误，栏目不存在');            die;        }        if (empty($id)) {            showError('内容不存在');            die;        }        $m = $data['cat']['module'];        $this->chkModule($m);        #所有父类ID        $data['catlist'] = $this->category->parentArr($catid);        #条件        $id = (int) $id;        $where = " WHERE id=$id AND lang=" . LANG_ID;        if ($this->fieldsinfo['status']) {            $where .= " AND status=1 ";        }        #内容详情与所属栏目        $data['row'] = $this->db->get("SELECT * FROM ###_" . $m . $where);        if ($data['row']) {            #更新点击            if ($this->fieldsinfo['hits']) {                $this->db->update($m, 'hits=hits+1', array('id' => $id));            }        } else {            showError('访问错误，内容不存在');            die;        }        #发送变量        $this->smarty->assign('fieldsinfo', $this->fieldsinfo);        $this->smarty->assign('data', $data);        $this->display_before($data['row']);        #显示模板        $template = 'show';        if (isset($data['row']['template']) && !empty($data['row']['template'])) {            $template = $data['row']['template'];        } else if (!empty($data['cat']['template_show'])) {            $template = $data['cat']['template_show'];        }        $tpl = $m . '_' . $template . '.html';        $this->smarty->display($tpl);    }    #检查模型是否存在 and 获取模型和字段配置信息    function chkModule($m) {        $this->content->chkModule($m);        $this->moduleinfo = $this->content->getModuleinfo();        $this->fieldsinfo = $this->content->getFieldsinfo();        $this->smarty->assign('moduleinfo', $this->moduleinfo);    }    #新手学堂    function newbie($type = '', $step = '') {        $template = '';        $row = array();        #新手学堂封面        if (empty($type) && empty($step)) {            $row = array('title' => '新手学堂');            $template = 'newbie/home.html';        }        #一元挖宝新手指南        elseif ($type == 'yunbuy') {            $row = array('title' => '一元云购新手指南');            $template = 'newbie/yunbuy/home.html';        }        #竞拍新手学堂        elseif ($type == 'auction') {            $row = array('title' => '竞拍新手学堂');            $step = $step ? $step : 'index';            $template = 'newbie/auction/' . $step . '.html';            if (!$this->smarty->templateExists($template)) {                $template = 'newbie/auction/index.html';            }            $this->smarty->assign('url', '/content/newbie/auction/');        } else {            $this->msg();            die;        }        $this->ur_here($row['title'], $type ? array(                    array('name' => '新手学堂', 'url' => '/content/newbie')                        ) : array());        $this->display_before($row);        $this->smarty->display($template);    }    #邀请    function refer() {        $row = array('title' => '邀请');        $this->ur_here($row['title']);        $this->display_before($row);        $this->smarty->display('content/refer.html');    }    #体验区    function tiyan($type = 'auc') {        $template = 'content/tiyan.html';        $data = array();        if ($type == 'db') {            if (STPL == 'mobile') {                header('Location:/yunbuy/index?type=2');            }            $this->load->model('yunbuy');            $row = array('title' => '云购体验区');            $template = 'content/tiyan_db.html';            //云购赠币商品            $size = 20;            $data['yunList'] = $this->yunbuy->getyunbuy("end_num > 0 AND is_show =1 AND type = 2 ORDER BY listorders DESC", $size, 1, '*', 'href="/yunbuy/free/{num}');            $data['yunList'] = $this->db->lJoin($data['yunList'], 'goods', 'id,price', 'goods_id', 'id');            $this->smarty->assign('yunListNo', 4 - count($data['yunList']) % 4); #敬请期待            if ($data['yunList']) {                foreach ($data['yunList'] as $key => $val) {                    if (!empty($val['ext_info'])) {                        $ext_info = unserialize($val['ext_info']);                        if (!empty($ext_info))                            $val = array_merge($val, $ext_info);                    }                    $data['yunList'][$key] = $val;                }            }            $this->smarty->assign('navMark', 'freeyunbuy');        }else {            $this->load->model('auction');            $row = array('title' => '竞拍体验区');            #中奖名单（10个最新）            $size = 10;            $data['log'] = $this->auction->logList($size, 1, 0, 0, AllWIN, array(                'fields' => 'g.title,m.nickname,g.ext_info'                    ), 'tiyan');            #最新出价            $size = 6;            $data['newlog'] = $this->auction->logList($size, 1, 0, 0, '', array(                'fields' => 'g.title,m.nickname,m.photo'                    ), 'tiyan');            #竞拍体验商品            $size = 100;            $data['aucList'] = $this->auction->getList($size, 1, 0, UNDER_WAY, array(), 'tiyan');            $data['aucListNo'] = 3 - count($data['aucList']) % 3; #敬请期待            //判断是否领取            if (isset($_SESSION['mid'])) {                $data['memberOther'] = $this->db->get("SELECT * FROM ###_member_other WHERE mid='" . $_SESSION['mid'] . "'");            }            #今天是否签到            $data['is_signin'] = -1;            if ($_SESSION['mid']) {                $data['is_signin'] = $this->db->getstr("SELECT COUNT(*) AS count FROM ###_signin WHERE mid = '$_SESSION[mid]' AND addtime >= '" . strtotime('today') . "'");            }            $this->smarty->assign('navMark', 'tiyan');        }        $this->ur_here($row['title']);        $this->display_before($row);        $this->smarty->assign('data', $data);        $this->smarty->display($template);    }    #静态页面    function html($name) {        $template = 'html/' . $name . '.html';        if (empty($name) || !$this->smarty->templateExists($template))            $this->msg();        $row = array();        if ($name == 'winrules') {            $row['title'] = '竞拍中奖规则';        } elseif ($name == 'js') {            $content = $this->smarty->fetch($template);            die($content);        }        $this->ur_here($row['title']);        $this->display_before($row);        $this->smarty->display($template);    }    #ajax领取拍币    function getPoints() {        if (!$_POST)            exit(0);        #判断是否登陆        if (!isset($_SESSION['mid'])) {            exit(json_encode(array('error' => 1, 'msg' => '请先登陆后领取！')));        }        $mid = $_SESSION['mid'];        $type = trim($_POST['type']);        $sql = "SELECT $type FROM ###_member_other WHERE mid='$mid'";        $row = $this->db->get($sql);        //if(empty($row)) exit(0);        $where = '';        if (count($row) > 0) {            $where = array('mid' => $mid);        }        if ($where && $row[$type] == 1 && !in_array($type, array('isDaren', 'isJpDaren'))) {            exit(json_encode(array('error' => 1, 'msg' => '您已经领取过了！')));        }        $this->load->model('member');        $member = $this->member->member_info($mid);        //领取前需要...        if ($member['is_voice'] != 1 && $member['user_money'] <= 0) {            if ($site_config[voice_open] == 1)                $other_msg = "前先语音认证或充值余额！";            else                $other_msg = "前先充值余额！";            exit(json_encode(array('error' => 1, 'msg' => "领" . $this->L['unit_pay_points'] . $other_msg)));        }        //判断后台是否禁用免费领取        if ($member['free'] == 0) {            exit(json_encode(array('error' => 1, 'msg' => '账号异常，领取失败，请联系客服！')));        }        //同IP最多允许?个不同会员领取        $count_ip_mid = 5;        $sql = "SELECT DISTINCT mid FROM ###_signin WHERE " .                "ip='" . getIP() . "'";        $res = $this->db->select($sql);        $array = array();        foreach ($res as $k => $v) {            $array[$v['mid']] = $v;        }        if (count($res) >= $count_ip_mid && !isset($array[$mid])) {            exit(json_encode(array('error' => 1, 'msg' => '账号异常，领取失败，请联系客服！')));        }        $points = 0;        $dbpoints = 0;        $desc = '';        $typeValue = $row[$type] + 1;        switch ($type) {            case 'isMob': #绑定手机                /* if(!empty($member['mobile'])){                  $points = 20;                  $desc = "领取".$this->L['unit_pay_points']."（绑定手机）";                  }else{                  exit(json_encode(array('error'=>1,'msg'=>'请先到会员中心绑定手机号！')));                  } */                break;            case 'isMail': #验证邮箱                if ($member['verify_email'] == 1) {                    $dbpoints = $this->site_config['isMail'];                    $desc = "领取" . $this->L['unit_db_points'] . "（验证邮箱）";                } else {                    exit(json_encode(array('error' => 1, 'msg' => '请先到电脑端验证邮箱！')));                }                break;            case 'isPhoto': #上传头像                if ($member['photo'] != '') {                    $points = $this->site_config['isPhoto'];                    $desc = "领取" . $this->L['unit_pay_points'] . "（上传头像）";                } else {                    exit(json_encode(array('error' => 1, 'msg' => '请先上传头像！')));                }                break;            case 'isIdcard': #实名认证                if ($member['realname'] != '') {                    $dbpoints = $this->site_config['isIdcard'];                    $desc = "领取" . $this->L['unit_db_points'] . "（实名认证）";                } else {                    exit(json_encode(array('error' => 1, 'msg' => '请先实名认证！')));                }                break;            case 'isDaren':                $sql = "SELECT SUM(yd.qty) AS qty FROM ###_yundb AS yd " .                        "LEFT JOIN ###_yunorder AS yo ON yo.order_id=yd.order_id " .                        "WHERE yd.type=1 AND yd.status>1 AND yd.mid='$mid' AND yo.user_bonus_id=0";                $count = $this->db->getstr($sql);                $countSY = $count - $row[$type] * 50;                if ($countSY >= 50) {                    $points = $this->site_config['isDaren'];                    $desc = "领取" . $this->L['unit_pay_points'] . "（" . $this->L['unit_yun'] . "达人）";                } else {                    exit(json_encode(array('error' => 1, 'msg' => "再参与" . (50 - $countSY) . "人次，您就能领取" . $this->L['unit_yun'] . "达人了，再接再厉哦！")));                }                break;            case 'isJpDaren':                $sql = "SELECT COUNT(DISTINCT a.log_id) FROM ###_auction_log AS a " .                        "LEFT JOIN ###_goods_activity AS b ON a.act_id=b.act_id " .                        "WHERE a.first=1 AND b.cat_type!='tiyan' AND a.bid_user='$mid'";                $count = $this->db->getstr($sql);                $countSY = $count - $row[$type] * 50;                if ($countSY >= 50) {                    $points = $this->site_config['isJpDaren'];                    $desc = "领取" . $this->L['unit_pay_points'] . "（" . $this->L['unit_pay'] . "达人）";                } else {                    exit(json_encode(array('error' => 1, 'msg' => "再参与" . (50 - $countSY) . "个商品" . $this->L['unit_pay'] . "，您就能领取" . $this->L['unit_pay'] . "达人了，再接再厉哦！")));                }                break;            case 'isVoice': #语音认证                if ($member['is_voice'] == 1) {                    $dbpoints = $this->site_config['isVoice'];                    $desc = "领取" . $this->L['unit_db_points'] . "（语音认证）";                } else {                    exit(json_encode(array('error' => 1, 'msg' => '请先语音认证！')));                }                break;            case 'isStep':                //TODO:推出中...                break;            default:exit(0);                break;        }        if ($points == 0 && $dbpoints == 0) {            exit(json_encode(array('error' => 1, 'msg' => '推出中...')));        }        if (in_array($type, array('isVoice', 'isIdcard', 'isMail'))) {            $this->load->model('bonus');            $this->bonus->send(array(                'mid' => $mid,                'send_type' => 1,                'desc' => $desc,            ));        } else {            $this->member->accountlog(ACT_ACT, array(                'pay_points' => $points,                'db_points' => $dbpoints,                'mid' => $mid,                'desc' => $desc,            ));        }        $this->db->save('member_other', array($type => $typeValue, 'mid' => $mid), '', $where);        $msg = "成功领取 ";        if ($points > 0) {            $msg .= $points . " " . $this->L['unit_pay_points'] . " ";        }        if ($dbpoints > 0) {            $msg .= $dbpoints . " " . $this->L['unit_db_points'] . "" . $this->L['unit_bonus'] . "";        }        $result = array('error' => 0, 'msg' => $msg);        echo json_encode($result);    }    /*     * 最新揭晓     * @param int $ajax     * @param string $type     * @param int $page     */    function win($page = 1) {        $this->load->model('taglib');        $type = $_GET['type'];        if ($type == 'auc') {            $size = 10;            $this->load->model('auction');            $options = array(                'url' => '1/',                'qishu' => 1,                'where' => " AND a.is_show=1",                'fields' => 'm.photo,m.nickname,m.ip,g.ext_info,g.title,g.goods_id,g.qishu'            );            $data['count'] = $this->auction->logList(0, 1, 0, 0, AllWIN, $options);            $list = $this->auction->logList($size, $page, 0, 0, AllWIN, $options);            $list = $this->db->lJoin($list, 'goods', 'id,price,cover', 'goods_id', 'id');            #商品主图            $this->load->model('upload');            $list = $this->upload->getImgUrls($list, 'cover', 'gallery', array('src'));            $this->smarty->assign('list', $list);            $this->smarty->assign('data', $data);            $this->smarty->display('content/winaucajax.html');        } elseif ($type == 'djx') { #待揭晓            $array = $this->yunbuy->updateDjx(1);            foreach ($array['list'] as $k => $v) {                if ($v['wait_time'] <= time()) {                    $v['wait_status'] = 1;                } else {                    $v['wait_status'] = 0;                }                //$v['wait_status'] = 0;                $array['list'][$k] = $v;            }            $array['list'] = $this->db->lJoin($array['list'], 'goods', 'id,price', 'goods_id', 'id', 'g_');            $this->api_result(array('data' => $array));        } else {            $size = 10;            $this->load->model('page');            $_GET['page'] = intval($page);            $this->page->set_vars(array('per' => $size, 'url' => ''));            $sql = "select buy_id,title,thumb,need_num,custom_price,end_time,luck_code,qishu,qihao                    from ###_yunbuy where luck_code>0 and is_show=1 order by end_time DESC,buy_id DESC";            $list = $this->page->hashQuery($sql, '1/')->result_array();            $list = $this->db->lJoin($list, 'yundb', 'buy_id,mid,username,qty,goods_name,ip', 'buy_id', 'buy_id', '', array('status' => 3));            $list = $this->db->lJoin($list, 'member', 'mid,nickname,photo', 'mid', 'mid');            $list = $this->db->lJoin($list, 'goods', 'id,price', 'goods_id', 'id', 'g_');            if (!empty($list)) {                foreach ($list as $key => $val) {                    $val = $this->yunbuy->getThumb($val, 1, array('src'));                    $list[$key]['imgurl_thumb'] = $this->taglib->_fileurl(array('source' => $val['thumb'], 'width' => 200, 'height' => 200, 'type' => 1));                    $list[$key]['username'] = nickname($val['username'], $val['nickname']);                    $list[$key]['end_time'] = formatTime($val['end_time']);                    $list[$key]['photo'] = $this->taglib->_photo(array('source' => $val['photo'], 'size' => 80));                    ;                }            }            $array = array('list' => $list);            $this->api_result(array('data' => $array));        }    }    //对比缓存与页面上正在揭晓内容，有新的生成时，更新页面正在揭晓    function ajaxIds() {        $array = $this->yunbuy->updateDjx(1);        $ids_post = trim($_POST['ids']);        $this->load->model('taglib');        $ids = ',';        $html = '';        if (!empty($array['list'])) {            foreach ($array['list'] as $k => $v) {                $ids .= $v['buy_id'] . ',';                if (strpos($ids_post, ',' . $v['buy_id'] . ',') === false) {                    $v['has_time'] = ($v['wait_time'] - time()) * 1000;                    if ($v['luck_code'] > 0) {                        $v['wait_status'] = 1;                    } else {                        $v['wait_status'] = 0;                    }                    $v['imgurl_thumb'] = $this->taglib->_fileurl(array('source' => $v['imgurl_src'], 'width' => 200, 'height' => 200, 'type' => 1));                    $v['g_price'] = price_format($v['g_price']);                    $array['list'][$k] = $v;                } else {                    unset($array['list'][$k]);                }            }        }        if (empty($array['list'])) {            exit(json_encode(array('error' => 0)));        } else {            $array['list'] = $this->db->lJoin($array['list'], 'goods', 'id,price', 'goods_id', 'id', 'g_');            exit(json_encode(array('error' => 1, 'ids' => $ids, 'data' => $array)));        }    }    //晒单专区    function share($page = 1) {        $id = isset($_GET['id']) ? intval($_GET['id']) : 0;        if ($id && STPL == 'mobile') {            $row['head'] = '晒单详细';            $this->display_before($row);            $share = $this->db->get("SELECT * FROM ###_share WHERE id = '" . $id . "'");            if ($share['extension_code'] == CART_DB) {                $info = $this->yunbuy->yuninfo($share['obj_id']);                $info['url'] = url('/yunbuy/detail/' . $share['obj_id']);                //最新一期                $new_buy = $this->db->get("SELECT * FROM ###_yunbuy WHERE sid = $info[sid] AND end_num <> 0 ORDER BY buy_id DESC");                $this->smarty->assign('new_buy', $new_buy);                $db_info = $this->db->get("SELECT d.* FROM ###_yundb as d,###_goods_order as o WHERE o.id = $share[order_id] AND o.extension_id = d.id");                $this->smarty->assign('db_info', $db_info);            }            if (in_array($share['extension_code'], array(CART_WIN, CART_AUC))) {                $this->load->model('auction');                $info = $this->auction->get($share['obj_id']);                $info['url'] = url('/auction/view/' . $share['obj_id']);                if ($share['extension_code'] == CART_WIN) {                    $this->smarty->assign('cj_info', $this->db->get("SELECT * FROM ###_auction_log WHERE log_id=(SELECT extension_id FROM ###_goods_order WHERE id=" . $share['obj_id'] . ")"));                } elseif ($share['extension_code'] == CART_AUC) {                    $this->smarty->assign('cj_info', $this->db->get("SELECT * FROM ###_auction_log WHERE act_id=" . $share['obj_id'] . " ORDER BY log_id DESC"));                }            }            $this->smarty->assign('info', $info);            $this->smarty->assign('row', $row);            $this->smarty->assign('share', $share);            $this->smarty->display('content/share_detail.html');            die;        }        //统计晒单量        $sql = "SELECT COUNT(id) AS count FROM ###_share WHERE is_show=1";        $data['count'] = $this->db->getstr($sql);        $row['title'] = '晒单专区';        $this->display_before($row);        $this->ur_here($row['title']);        $this->smarty->assign('data', $data);        $this->smarty->assign('navMark', 'share');        $this->smarty->display('content/share.html');    }    /* 异步加载晒单列表 */    function share_ajax($rec = 'all', $page = 1) {        $this->load->model('taglib');        $goods_id = isset($_REQUEST['goods_id']) ? intval($_REQUEST['goods_id']) : 0;        $type = isset($_REQUEST['type']) ? trim($_REQUEST['type']) : '';        $size = 8;        $order = " ORDER BY id DESC";        $where = "s.mid <> 0 AND is_show=1";        //按商品ID        if ($goods_id) {            $where .= " AND goods_id=" . $goods_id;        }        //按精华        if ($rec == 'yes') {            $where .= " AND is_rec=1";        } elseif ($rec == 'no') {            $where .= " AND is_rec=0";        }        //按类型        if ($type == 'auc') {            $where .= " AND extension_code IN(1,2)";        } elseif ($type == 'db') {            $where .= " AND extension_code=3";        }        $list = $this->yunbuy->getShare($where . $order, $size, $page);        if (!empty($list)) {            foreach ($list as $key => $val) {                $list[$key]['username'] = nickname($val['username'], $val['nickname']);                $list[$key]['addtime'] = date('Y-m-d H:i:s', $val['addtime']);                $list[$key]['thumb'] = $this->taglib->_fileurl(array('source' => $val['thumb'], 'width' => 200, 'height' => 200));            }        }        $this->api_result(array('data' => $list));    }    //导购流程    function chart() {        $row['title'] = '导购流程';        $this->ur_here($row['title']);        $this->display_before($row);        $this->smarty->display('content/chart.html');    }    function buyRecords() {        $row['title'] = '所有云购历史参与记录';        $this->ur_here($row['title']);        $this->display_before($row);        $this->smarty->display('content/buyRecords.html');    }    /* 异步加载云购记录 */    function recordsAjax($page = 1) {        if (isAjax() == false) {            $this->msg();        }        $order = 'id DESC';        #分页        $this->load->model('page');        $_GET['page'] = intval($page);        $this->page->set_vars(array('per' => 20));        $list = $this->page->hashQuery("SELECT * FROM ###_yundb where status>1 ORDER BY " . $order)->result_array();        $list = $this->db->lJoin($list, 'member', 'mid,nickname,photo', 'mid', 'mid');        $this->smarty->assign('list', $list);        $content = $this->smarty->fetch('content/recordsAjax.html');        die($content);    }    /* 帮助中心 */    function help() {        $catid = 81;        $data = array();        $cate = cate();        if (!empty($cate)) {            foreach ($cate as $val) {                if ($val['parentid'] == 81 && $val['module'] == 'page') {                    $row = $this->db->get("SELECT * FROM ###_page WHERE id = '$val[id]'");                    $val['content'] = $row['content'];                    $data['list'][] = $val;                }            }        }        $this->api_result(array('data' => $data));    }    /**     *      * @param int $catId 分类ID     */    public function getHelpList($catId = 7) {        $data = array();        $cate = cate();        if (!empty($cate)) {            foreach ($cate as $val) {                if ($val['parentid'] == $catId) {                    $childid = explode(',', $val['arrchildid']);                    $val['arrchildid'] = array();                    foreach ($childid as $id) {                        if ($id != $val['id'] && $cate[$id]) {                            $val['arrchildid'][] = $cate[$id];                        }                    }                    $data['list'][] = $val;                }            }        }        $data['list'] = array_reverse($data['list']);        $this->api_result(array('data' => $data));    }    /**     *      * @param int $pageId 分类ID     */    public function getHelpPage($pageId) {        $data = array('title' => '','content' => '');        if (ctype_digit($pageId)) {            $data = $this->db->get("SELECT * FROM ###_page WHERE id = '$pageId'");            if (!$data) {                $data = array('title' => '','content' => '');            } else {                $data['content'] = preg_replace('/<a.*?>/', '', $data['content']);                $data['content'] = preg_replace('/<\/a>/', '', $data['content']);            }        }        $this->api_result(array('data' => $data));    }}