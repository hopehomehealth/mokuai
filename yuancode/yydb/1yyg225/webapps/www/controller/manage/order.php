<?php/** * Name 会员管理 * Class member_adm */class order extends Lowxp{    private $orderStatus = array(        '1'=>'等待付款',        '2'=>'等待发货',        '7'=>'正在备货',        '3'=>'已经发货',        '4'=>'交易完成',        '5'=>'取消订单'    );    function __construct(){        #按钮        $this->btnMenu = array(            0=>array('url'=>'#!order/index','name'=>'订单管理'),            //1=>array('url'=>'#!order/timing','name'=>'订单统计'),        );        parent::__construct();    }    function index($page = 1){        $conds = $this->getFilterCond();        $condition = 'WHERE 1 ';        $condition .= count($conds['where']) ? " AND ".implode(' AND ',$conds['where']) : '';        $orderby = $conds['order'];        $excel = (isset($_GET['excel'])&&$_GET['excel']==1)?1:0;        //获取商家信息        $this->load->model('business');        $this->smarty->assign('business_power', $this->business->business_power);        $this->load->model('page');        $_GET['page'] = $page;        $sql = "SELECT DISTINCT go.id,go.* FROM ###_goods_order AS go ";        if(strpos($condition,'goi.')!==false){            $sql .= "LEFT JOIN ###_goods_order_item AS goi ON goi.order_id=go.id ";        }        if(strpos($condition,'g.')!==false){            $sql .= "LEFT JOIN ###_goods_order_item AS goi ON goi.order_id=go.id ";            $sql .= "LEFT JOIN ###_goods AS g ON g.id=goi.good_id ";        }        if($_REQUEST['total']){            #实际发货成本            $str = "SELECT SUM(go.oldprice) FROM ###_goods_order AS go ".$condition;            $data['oldprice'] = $this->db->getstr($str);            #商品成本            $str = "SELECT SUM(g.price) FROM ###_goods_order AS go ".                "LEFT JOIN ###_goods_order_item AS goi ON goi.order_id=go.id ".                "LEFT JOIN ###_goods AS g ON g.id=goi.good_id ".                $condition;            $data['price'] = $this->db->getstr($str);            #订单支付            $str = "SELECT SUM(go.order_price) AS order_price,SUM(go.money_paid) AS money_paid FROM ###_goods_order AS go ".                $condition;            $row = $this->db->get($str);            $data['order_price'] = $row['order_price'] - $row['money_paid'];            $data['money_paid'] = $row['money_paid'];            #平台返佣            if($this->business->business_power){                $list = $this->db->select("select go.extension_id from ###_goods_order as go ".$condition." AND go.extension_code='".CART_DB."' and go.bus_mid>0 and go.bus_money_is=1");                if($list){                    $yunDb_ids = "'-1'";                    foreach($list as $v){                        $yunDb_ids .= ",'".$v['extension_id']."'";                    }                    $list = $this->db->select("select buy_id from ###_yundb where id IN($yunDb_ids)");                    if($list){                        $yun_ids = "'-1'";                        foreach($list as $v){                            $yun_ids .= ",'".$v['buy_id']."'";                        }                        $row = $this->db->get("select SUM(goods_price) as goods_price,SUM(bus_money) as bus_money from ###_yunbuy where buy_id IN($yun_ids)");                        $data['bus_money_manage'] = $row['goods_price'] - $row['bus_money'];                    }                }            }            $this->smarty->assign('data',$data);        }        $sql .= $condition . $orderby;        if($excel==1){            $list = $this->db->select($sql);        }else{            $list = $this->page->hashQuery($sql)->result_array();        }        $this->load->model('share');        $this->load->model('order');        $list = $this->order->unionOrderGoods($list);        //$list = $this->db->ljoin($list, 'business', 'mid,bus_name', 'bus_mid', 'mid');        foreach($list as $k=>$v){            if(!isset($list[$k]['goods']))$list[$k]['goods'] = array();            //$list[$k]['deliver'] = json_decode($v['deliver'],true);        }        //导出        if($excel==1){            return $list;        }        $this->smarty->assign('goodsForm',$this->order->getGoodsForm());        $this->smarty->assign('orderstatus',$this->orderStatus);        $this->smarty->assign('list',$list);        $this->smarty->display('manage/order/list.html');    }    //订单分析    function timing(){        $conds = $this->getFilterCond();        $condition = 'WHERE 1 ';        $condition .= count($conds['where']) ? " AND ".implode(' AND ',$conds['where']) : '';        $sql2 = "";        if(strpos($condition,'goi.')!==false){            $sql2 .= "LEFT JOIN ###_goods_order_item AS goi ON goi.order_id=go.id ";        }        #实际发货成本        $sql = "SELECT SUM(go.oldprice) FROM ###_goods_order AS go ".$sql2.$condition;        $data['oldprice'] = $this->db->getstr($sql);        #商品成本        $sql = "SELECT SUM(g.price) FROM ###_goods_order AS go ".               "LEFT JOIN ###_goods_order_item AS goi ON goi.order_id=go.id ".               "LEFT JOIN ###_goods AS g ON g.id=goi.good_id ".               $condition;        $data['price'] = $this->db->getstr($sql);        $this->smarty->assign('btnNo',1);        $this->smarty->assign('data',$data);        $this->smarty->assign('orderstatus',$this->orderStatus);        $this->smarty->display('manage/order/timing.html');    }    //创建/更新    function edit(){        $this->load->model('order');        //提交        if(isset($_POST['Submit'])){            $res = $this->order->save();            if(isset($res['code']) && $res['code']==0){                $this->tip($res['message'],array('inIframe'=>true));                $this->exeJs("parent.com.xhide();parent.main.refresh()");            }else{                $this->tip($res['message'],array('inIframe'=>true,'type'=>1));            }            exit;        }        $id = (int) $_GET['id'];        $row = $this->db->get("SELECT * FROM ###_goods_order WHERE id=".$id);        #物流列表        $express = $this->db->select("SELECT * FROM ###_express ORDER BY id ASC");        $this->smarty->assign('express',$express);        $this->smarty->assign('row',$row);        $this->smarty->assign('goodsForm',$this->order->getGoodsForm());        $this->smarty->display('manage/order/edit.html');    }    /**     * 订单详情     * @param string $id     */    function detail($id = ''){        is_numeric($id)||die;        $order = $this->db->get("SELECT * FROM `goods_order` WHERE id=".$id);        #echo '<pre>';print_r($order);echo '</pre>';        if(!isset($order['id']))die('订单不存在!');        $this->load->model('share');        $orders = array($order);        $this->load->model('order');        $orders = $this->order->unionOrderGoods($orders);        foreach($orders as $k=>$v){            if(!isset($orders[$k]['goods']))$list[$k]['goods'] = array();            //$orders[$k]['deliver'] = json_decode($v['deliver'],true);        }        #$orders = $this->db->lJoin($orders,'member','mid,nickname','mid','mid','m_');        $order = $orders[0];        #echo '<pre>';print_r($order);echo '</pre>';        $rows = $this->db->select("SELECT * FROM goods_order_log WHERE order_id=".$id." ORDER BY id");        $this->smarty->assign('order_logs',$rows);        $this->smarty->assign('order',$order);        $this->smarty->display('manage/order/detail.html');    }    //编辑订单商品    function goods(){        $id = (int) $_GET['id'];        if(!$id){            $this->tip('参数错误',array('inIframe'=>true,'type'=>1));        }        //提交        if(isset($_POST['Submit'])){            $post = $_POST['post'];            #保存            $where = array('id'=>$id);            $res = $this->db->save('goods_order_item',$post,'',$where);            $goods_order_item = $this->db->get("select order_id,goods_name from ###_goods_order_item where id=$id limit 1");            $goods_order = $this->db->get("select order_sn from ###_goods_order where id=".$goods_order_item['order_id']." limit 1");            if($res){                admin_log('编辑订单商品备注：'.$goods_order['order_sn'].'-'.$goods_order_item['goods_name']);                $this->tip('更新成功',array('inIframe'=>true));                $this->exeJs("parent.com.xhide();parent.main.refresh()");            }else{                $this->tip('数据更新失败',array('inIframe'=>true,'type'=>1));            }            exit;        }        $row = $this->db->get("SELECT * FROM ###_goods_order_item WHERE id=".$id);        $this->smarty->assign('row',$row);        $this->smarty->display('manage/order/goods.html');    }    function getFilterCond(){        $where = array();        $order = ' ORDER BY ';        #关键词搜索        $array = array('k','q');        foreach($array as $v){            if(!isset($_GET[$v]))$_GET[$v] = '';        }        if(!empty($_GET['q'])){            if(in_array($_GET['k'],array('username','nickname','realname'))){                $row = $this->db->get("SELECT mid FROM ###_member WHERE `".trim($_GET['k'])."`='".addslashes($_GET['q'])."'");                $mid = isset($row['mid']) ? $row['mid'] : 0;                $where[] = "go.mid=".$mid."";            }elseif(in_array($_GET['k'],array('bus_name'))){                $row = $this->db->get("SELECT mid FROM ###_business WHERE `".trim($_GET['k'])."`='".addslashes($_GET['q'])."'");                $mid = isset($row['mid']) ? $row['mid'] : 0;                $where[] = "bus.mid=".$mid."";            }else{                $where[] = trim($_GET['k'])." LIKE '%".addslashes($_GET['q'])."%'";            }        }        $array = array('start_time','end_time','order_status','ismoney');        foreach($array as $v){            if(!isset($_GET[$v]))$_GET[$v] = '';        }        if($_GET['start_time']){            $where[] = "go.c_time>=".strtotime($_GET['start_time'].' 00:00:00');        }        if($_GET['end_time']){            $where[] = "go.c_time<=".strtotime($_GET['end_time'].' 23:59:59');        }        if(!empty($_GET['order_status'])){            $where[] = "go.status='".$_GET['order_status']."'";        }        if(!empty($_GET['ismoney'])){            $where[] = "go.ismoney='".(($_GET['ismoney']==1)?1:0)."'";        }        if(!empty($_GET['fow'])){            $where[] = "go.fow='".$_GET['fow']."'";        }        if(!empty($_REQUEST['publish']) && is_numeric($_REQUEST['publish'])){            if($_REQUEST['publish'] == 1){                $where[] = "go.bus_mid<1";            }elseif($_REQUEST['publish'] == 2){                $where[] = "go.bus_mid>0";            }        }        #快速排序        $order .= isset($_GET['sortby']) ? $_GET['sortby'] : 'go.id';        $order .= ' ';        $order .= isset($_GET['sortorder']) ? $_GET['sortorder'] : 'DESC';        $this->smarty->assign($_GET);        return array('where'=>$where, 'order'=>$order);    }    /**     * 收到货款     * @param string $order_id     */    function receivePay($order_id = ''){        is_numeric($order_id) || $this->fatalError('参数错误!');        $order = $this->db->get("SELECT * FROM goods_order WHERE id=".$order_id);        isset($order['id']) || $this->fatalError('订单不存在!');        $this->smarty->assign('order_id',$order_id);        $this->smarty->assign('order_no',$order['order_sn']);        $this->smarty->display('manage/order/state_receive_pay.html');    }    /**     * 确认收货     * @param string $id     */    function finish($order_id = ''){        is_numeric($order_id) || exit($this->tip('参数错误!',array('inIframe'=>true,'type'=>1)));        $order = $this->db->get("SELECT id FROM goods_order WHERE status=3 AND id=".$order_id);        isset($order['id']) || exit($this->tip('此订单不存在!',array('inIframe'=>true,'type'=>1)));        if($order){            $this->load->model('order');            $this->order->chageOrderState($order_id,4,'后台手动确认收货');            exit(1);        }else{            exit(0);        }    }    /**     * 提交收到货款备注信息     */    function subReceivePay(){        isset($_POST['orderid']) && is_numeric($_POST['orderid']) && isset($_POST['state_info']) || $this->fatalError('参数错误');        $orderid = $_POST['orderid'];        $order = $this->db->get("SELECT * FROM goods_order WHERE id=".$orderid);        isset($order['id']) || $this->fatalError('订单不存在!');        $this->load->model('order');        $res = $this->order->chageOrderState($order['id'],2,$_POST['state_info'],array('amount'=>$order['amount']));        if($res){            $this->tip('操作成功!',array('hideWin'=>true));            $this->exeJs('main.refresh();');        }else{            $this->fatalError('操作失败!');        }    }    /**     * 取消订单     */    function doCancel(){        isset($_POST['order_id']) && is_numeric($_POST['order_id']) || $this->fatalError('参数错误!');        $cancelType = $_POST['cancel_type'];        in_array($cancelType,array('0','1','2','3')) || $this->fatalError('取消订单类型不存在!');        $order_id = $_POST['order_id'];        $order = $this->db->get("SELECT * FROM goods_order WHERE id=".$order_id);        isset($order['id']) || $this->fatalError('订单不存在!');        //直购订单付款前屏蔽取消功能        if($order['status']==1 && $order['extension_code'] == CART_BUY){            $yunorder = $this->db->get("select * from ###_yunorder where order_sn='".$order['order_sn']."'");            if($yunorder){                $this->fatalError('直购订单付款前不允许取消!');            }        }        $this->load->model('order');        $res = $this->order->chageOrderState($order['id'],5,$_POST['state_info'],array('cancel_type'=>$cancelType));        if($res){            //取消订单成功,相关的优惠券和积分返还给用户.            $this->order->cancelOrder($order['id']);            $this->tip('取消成功!',array('hideWin'=>true));            $this->exeJs('main.refresh();');        }else{            $this->fatalError('操作失败!');        }    }    /**     * 取消订单     * @param string $order_id     */    function cancel($order_id = ''){        is_numeric($order_id) || $this->fatalError('参数错误!');        $order = $this->db->get("SELECT * FROM goods_order WHERE id=".$order_id);        isset($order['id']) || $this->fatalError('订单不存在!');        $this->smarty->assign('order_id',$order_id);        $this->smarty->assign('order_no',$order['order_sn']);        $this->smarty->display('manage/order/state_order_cancel.html');    }    /**     * 发货管理     * @param string $id     */    function send($id = ''){        is_numeric($id)||die('订单不存在!');        $order = $this->db->get("SELECT * FROM `goods_order` WHERE id=".$id);        isset($order['id']) || die('订单不存在!');        #物流列表        $express = $this->db->select("SELECT * FROM ###_express ORDER BY id ASC");        $this->smarty->assign('express',$express);        $this->load->model('share');        $orders = array($order);        $this->load->model('order');        $orders = $this->order->unionOrderGoods($orders);        foreach($orders as $k=>$v){            if(!isset($orders[$k]['goods']))$list[$k]['goods'] = array();            if($v['goods']){                foreach($v['goods'] as $k2=>$v2){                    $v['goods_desc'] = explode('|',$v2['goods_desc']);                }            }            $orders[$k] = $v;        }        $order = $orders[0];        $this->smarty->assign('order',$order);        $this->smarty->assign('goodsForm',$this->order->getGoodsForm());        $this->smarty->display('manage/order/send.html');    }    //备货    function doSendPre(){        if(!empty($_POST['order_id']) && isset($_POST['oldprice'])){            $this->tip('缺少必要参数!',array('inIframe'=>true,'type'=>1));        }        if(empty($_POST['oldprice'])){            $this->tip('请输入商品成本价!',array('inIframe'=>true,'type'=>1));            die;        }        $order_id = intval($_POST['order_id']);        $order = $this->db->get("SELECT * FROM goods_order WHERE id=".$order_id);        $this->load->model('order');        $res = $this->order->chageOrderState($order_id,7,'备货操作');        if($res){            $this->db->update('goods_order',array(                'oldprice'=>$_POST['oldprice'],                'fow'=>$_POST['fow'],                'fou'=>trim($_POST['fou']),                'fono'=>trim($_POST['fono']),            ),array('id'=>$order['id']));            $this->tip('备货成功',array('inIframe'=>true));            $this->exeJs("parent.com.xhide();parent.main.refresh()");        }else{            $this->tip('备货失败!',array('inIframe'=>true,'type'=>1));        }    }    /**     * 提交发货信息     */    function doSend(){        if(empty($_POST['order_id'])){            $this->tip('缺少必要参数!',array('inIframe'=>true,'type'=>1));        }        if(empty($_POST['express_no'])){            $this->tip('请输入物流单号!',array('inIframe'=>true,'type'=>1));            die;        }        $order_id = intval($_POST['order_id']);        $express_no = $_POST['express_no'];        $express = intval($_POST['express']);        if(!$express){            $pinyin = trim($_POST['pinyin']);            $express_name = trim($_POST['express_name']);            $row_express = $this->db->get("SELECT * FROM express WHERE name='".$express_name."'");            if($row_express){                $express = $row_express['id'];            }else{                $express = $this->db->save('express',array(                    'name' => $express_name,                    'pinyin' => $pinyin,                ));            }        }        $order = $this->db->get("SELECT * FROM goods_order WHERE id=".$order_id);        $this->load->model('order');        $res = $this->order->chageOrderState($order_id,3,$_POST['state_info']);        if($res){            $this->db->update('goods_order',array(                'express'=>$express,                'express_num'=>$express_no,                'express_send_time'=>RUN_TIME            ),array('id'=>$order['id']));            $this->tip('发货成功',array('inIframe'=>true));            $this->exeJs("parent.com.xhide();parent.main.refresh()");        }else{            $this->tip('发货失败!',array('inIframe'=>true,'type'=>1));        }    }    /**     * 修改价格     * @param string $order_id     */    function chPrice($order_id = ''){        is_numeric($order_id) || $this->fatalError('参数错误!');        $order = $this->db->get("SELECT * FROM goods_order WHERE id=".$order_id);        isset($order['id']) || $this->fatalError('订单不存在!');        $this->smarty->assign('order',$order);        $member = $this->db->get("SELECT * FROM member WHERE mid=".$order['mid']);        $this->smarty->assign('member',$member);        $this->smarty->display('manage/order/state_chprice.html');    }    /**     * 修改价格     */    function subNewPrice(){        isset($_POST['order_id']) && is_numeric($_POST['order_id']) && isset($_POST['amount']) || $this->fatalError('参数错误!');        $order_id = $_POST['order_id'];        $this->load->model('order');        $res = $this->order->chOrderPrice($order_id,$_POST['amount']);        if($res===-1){            $this->fatalError('订单不存在');        }elseif($res){            $this->tip('调整成功!',array('hideWin'=>true));            $this->exeJs('main.refresh()');        }    }    /**     * 物流查询     * @param $order_id     */    function viewExpress($order_id){        $order = $this->db->get("SELECT * FROM goods_order WHERE id=".$order_id);        isset($order['express_num']) || $this->fatalError('订单不存在!');        $express_num = $order['express_num'];        $express = $this->db->get("SELECT * FROM express WHERE id=".$order['express']);        if(!isset($express['id']))die('无法查询该快递!');        $type = $express['pinyin'];        $this->load->model('share');        $result = $this->share->http('http://www.kuaidi100.com/query','get',array(            'type'=>$type,            'postid'=>$express_num,            'id'=>'1',            'valicode'=>'',            'temp'=>'0.03273166622966528'        ));        $data = json_decode($result,true);        $this->smarty->assign('list',$data);        $this->smarty->assign('order',$order);        $this->smarty->assign('express',$express);        //print_r('<pre>');var_dump($data);print_r('</pre>');exit;        $this->smarty->display('manage/order/view_express.html');        #document:http://www.kuaidi100.com/openapi/mobileapi.shtml        #http://m.kuaidi100.com/index_all.html?type=[快递公司编码]&postid=[快递单号]&callbackurl=[点击"返回"跳转的地址]    }    /**     * 导出订单     */    function exportExcel(){        $this->load->model('share');        $_GET['excel'] = 1;        $data = $this->index();        $list = array();        foreach($data as $k=>$v){            $v['order_sn'] = $v['order_sn']." [".$v['order_code']."]";            $v['c_time'] = date('Y-m-d H:i:s',$v['c_time']);            //会员信息            $v['user_username'] = $v['m_username'];            $v['user_nickname'] = $v['m_nickname'];            $v['user_realname'] = $v['m_realname'];            $v['user_mobile'] = $v['m_mobile'];            $v['user_bus_name'] = $v['bus_name'];            $v['user_status'] = ($v['m_status']==0) ? 'm_status' : '';            //发货信息            $v['address_name'] = $v['name'];            $v['address_mobile'] = $v['mobile'];            $v['address_deliver'] = $v['area']." ".$v['deliver'];            $v['address_express'] = $v['express_name']."[".$v['express_num']."]";            $v['address_note'] = $v['note'];            //商品信息            $v['goods_info'] = "\"";            foreach($v['goods'] as $vo){                $v['goods_info'] .= "商品名称：".$vo['goods_name']."\n";                if($vo['virtual_list']){                    foreach($vo['virtual_list'] as $voo){                        $v['goods_info'] .= "卡号：".$voo['vir_number']."\n";                    }                }                if($vo['goods_price']){ $v['goods_info'] .= "原价：".$vo['goods_price']."\n"; }                if($vo['oldprice']){ $v['goods_info'] .= "采购价：".$vo['oldprice']."\n"; }                if($vo['goods_info']){ $v['goods_info'] .= "备注：".$vo['goods_info']."\n"; }            }            $v['goods_info'] .= "\"";            //支付信息            $v['order_price'] = $v['order_price'];            $v['order_amount'] = $v['amount'];            $list[] = $v;        }        $fields = array(            'order_sn'=>'订单号',            'c_time'=>'下单时间',            //会员信息            'user_username'=>'会员名',            'user_nickname'=>'昵称',            'user_realname'=>'姓名',            'user_mobile'=>'注册手机',            'user_bus_name'=>'商家名',            'user_status'=>'会员状态',            //发货信息            'address_name'=>'收货人',            'address_mobile'=>'收货人电话',            'address_deliver'=>'收货地址',            'address_express'=>'快递',            'address_note'=>'订单备注',            //商品信息            'goods_info'=>'商品信息',            'order_price'=>'订单总价',            'order_amount'=>'还需支付',            'status_name'=>'订单状态',        );        $this->share->SetExcelHeader('订单列表-'.date('Y-m-d H:i:s'),'订单列表');        $this->share->SetExcelBody($fields, $list);    }    /**     * 关闭三天未付款订单     */    function close3day(){        $day3ago = strtotime(date('Y-m-d 00:00:01',strtotime('-3 days')));        $rows = $this->db->select("SELECT * FROM `goods_order` WHERE status=1 AND c_time<".$day3ago);        $this->load->model('order');        foreach($rows as $val){            $this->order->chageOrderState($val['id'],'5','一键关闭超过3天未付款订单!');            $this->order->cancelOrder($val['id']);        }        $this->tip('操作成功!');        $this->exeJs('main.refresh();');    }}