<?php/** * ZZCMS 定期处理 * ============================================================================ * * 版权所有 2014-2016 厦门紫竹数码科技有限公司，并保留所有权利。 * 网站地址: http://www.lnest.com； * ---------------------------------------------------------------------------- * 这不是一个自由软件！您只能在不用于商业目的的前提下对程序代码进行修改和 * 使用；不允许对程序代码以任何形式任何目的的再发布。 */class timing extends Lowxp{    #单次解冻出价记录数    private $frozenNum = 10000;    function __construct(){        $this->btnMenu = array(            0=>array('url'=>'#!timing/index','name'=>'控制面板'),        );        parent::__construct();        $this->load->model('timing');    }    function index(){        $data = array();        $now = date('Y-m-d');        #判断今日是否开奖        $sql = "SELECT cod,addtime,nexttime FROM ###_cod ".            "ORDER BY id DESC LIMIT 1";        $data['cod'] = $this->db->get($sql);        $next_time = date('Y-m-d',$data['cod']['nexttime'])." 15:30:00";        if($data['cod']['addtime'] != strtotime($now)){            $data['cod']['status'] = 0; #可以开奖        }else{            $data['cod']['status'] = 1; #屏蔽开奖        }        $data['cod']['count'] = $this->timing->codList(1);        #获取未解冻出价记录数        $this->load->model('auction');        $data['logSum'] = $this->auction->logList(0,1,0,0,'frozen');        $data['frozenNum'] = $this->frozenNum;        #判断是否清理过数据        $clear = $this->base->read_static_cache('clear', '');        if($clear!==false){            $data['clear'] = 1;        }        #获取系统信息        $system = array(            'ip'=>getIP(),   #管理员IP            'os'=>PHP_OS,    #服务器操作系统            'web_server'=>$_SERVER['SERVER_SOFTWARE'], #WEB服务器            'php_version'=>PHP_VERSION, #PHP版本            'mysql_version'=>$this->db->version(), #mysql版本        );        $this->smarty->assign('system',$system);        $this->smarty->assign('data',$data);        $this->smarty->display('manage/timing/index.html');    }    #ajax异步处理    function ajaxCron(){        /**** 定期处理cron ****/        $cron = "<table><tr><td style='padding-right:30px;'><b style='font-style:italic'>订单统计信息</b><br>";        $array = array(            array('k'=>1,'href'=>'/manage#!order/index?order_status=1','text'=>'等待付款'),            array('k'=>2,'href'=>'/manage#!order/index?order_status=2','text'=>'等待发货'),            array('k'=>7,'href'=>'/manage#!order/index?order_status=7','text'=>'正在备货'),            array('k'=>3,'href'=>'/manage#!order/index?order_status=3','text'=>'已经发货'),            array('k'=>4,'href'=>'/manage#!order/index?order_status=4','text'=>'交易完成'),        );        foreach($array as $v){            $num = 0;            $sql = "SELECT COUNT(id) FROM ###_goods_order ".                "WHERE status=".$v['k'];            $num = $this->db->getstr($sql);            if($num>0 && !in_array($v['k'],array(3,4))) $num = "<b class='c-red'>$num</b>";            $cron .= "<p><a class='c-gray' href='".$v['href']."'>".$v['text']."（".$num."）</a></p>";        }        $cron .= "</td><td style='padding-right:30px'><b style='font-style:italic'>会员统计信息</b><br>";        $array = array(            array('k'=>'account_2_1','href'=>'/manage#!member/member_account?type=2&status=1','text'=>'提现记录处理'),            array('k'=>'idcard_1','href'=>'/manage#!member/verify_idcard?status=1','text'=>'实名认证审核'),            //array('k'=>'message_0','href'=>'/manage#!member/message','text'=>'站内信回复'),            array('k'=>'gbook_0','href'=>'/manage#!content/index/gbook?status=0','text'=>'在线留言审核'),            array('k'=>'share_0','href'=>'/manage#!share/index?sort=addtime&order=desc','text'=>'晒单审核'),            array('k'=>'send_0','href'=>'/manage#!templates/send?status=99','text'=>'邮件短信队列'),        );        foreach($array as $v){            $sql = ''; $num = 0;            switch($v['k']){                case 'account_2_1':                    $sql = "SELECT COUNT(id) FROM ###_member_account ".                        "WHERE type=2 AND status=1";                    break;                case 'idcard_1':                    $sql = "SELECT COUNT(id) FROM ###_verify_idcard ".                        "WHERE status=1";                    break;                case 'message_0':                    $sql = "SELECT COUNT(id) FROM ###_msg ".                        "WHERE mid>0 AND (to_mid=0 || to_mid IS NULL) AND (parent_id=0 || parent_id IS NULL)";                    break;                case 'gbook_0':                    $sql = "SELECT COUNT(id) FROM ###_gbook ".                        "WHERE status=0";                    break;                case 'share_0':                    $sql = "SELECT COUNT(id) FROM ###_share ".                        "WHERE mid<>0 AND id>(SELECT MAX(id) FROM ###_share WHERE is_show=1)";                    break;                case 'send_0':                    $sql = "SELECT COUNT(id) FROM ###_send ".                        "WHERE status=0";                    break;            }            if($sql) $num = $this->db->getstr($sql);            if($num>0) $num = "<b class='c-red'>$num</b>";            $cron .= "<p><a class='c-gray' href='".$v['href']."'>".$v['text']."（".$num."）</a></p>";        }        $cron .= "</td><td><b style='font-style:italic'>其它统计信息</b><br>";        $array = array(            array('k'=>1,'href'=>'/manage#!member/account_log/?k=desc&q=购买人次超过总需50%','text'=>'超过总需50%的云购订单'),        );        foreach($array as $v){            $sql = ''; $num = 0;            switch($v['k']){                case '1':                    $sql = "SELECT COUNT(id) FROM ###_account_log ".                        "WHERE `desc` LIKE '%购买人次超过总需50%'";                    break;            }            if($sql) $num = $this->db->getstr($sql);            if($num>0) $num = "<b class='c-red'>$num</b>";            $cron .= "<p><a class='c-gray' href='".$v['href']."'>".$v['text']."（".$num."）</a></p>";        }        $data = $this->timing->httpVerify();        if($data['error'] > 0){            //$cron .= "<p><span class='c-red'>".$data['error_text']."</span></p>";        }        $cron .= '</td></tr></table>';        /**** 消息提醒tip ****/        $tip = '';        //检查后台短信验证码登录是否开启        if(!$this->common['managesms']){            $tip .= '<li class="msg-tip">安全建议：建议开启后台短信验证码功能 <a href="#!setting/index/sms">【去开启】</a></li>';        }        //备案号链接检查        $this->load->model('block');        $row = $this->block->get("`mark`='footer'", "content");        if(strpos($row['content'], 'miitbeian.gov.cn') === false){            $tip .= '<li class="msg-tip">安全警告：请添加ICP备案号及工信部链接 <a href="#!block/index">【去设置】</a><a href="http://help.lnest.com/article/96" target="_blank">【帮助】</a></li>';        }        //检查卡密库存        $data = $this->timing->checkVirGoods();        if(!empty($data['list'])){            $tip .= '<li class="msg-tip">库存警告（卡密）：<br>';            foreach($data['list'] as $v){                $tip .= '<p>'.$v['g_name'].'（库存：'.$v['count'].'） <a href="#!virtual/index?goods_id='.$v['goods_id'].'">【发布卡密】</a></p>';            }            $tip .= '</li>';        }        $result = array('cron'=>$cron, 'tip'=>$tip);        die(json_encode($result));    }    #竞拍开奖列表    function cod($page=1){        #按钮        $this->btnMenu += array(            1=>array('url'=>'#!timing/cod','name'=>$this->L['unit_pay'].'开奖列表')        );        #分页        $this->load->model('page');        $_GET['page'] = intval($page);        $this->page->set_vars(array('per'=>(int)$this->common['page_listrows']));        #数据集        $sql = "SELECT * FROM ###_cod ORDER BY id DESC";        $data['list'] = $this->page->hashQuery($sql)->result_array();        $this->smarty->assign('btnNo',1);        $this->smarty->assign('btnMenu',$this->btnMenu);        $this->smarty->assign('data',$data);        $this->smarty->display('manage/timing/cod.html');    }    #竞拍开奖    function editCod(){        //提交        if(isset($_POST['Submit'])){            $res = $this->timing->save();            if(isset($res['code']) && $res['code']==0){                $this->tip($res['message'],array('inIframe'=>true));                $this->exeJs("parent.com.xhide();parent.cron.init('sendtpl');");            }else{                $this->tip($res['message'],array('inIframe'=>true,'type'=>1));            }            exit;        }        $this->smarty->display('manage/timing/cod_edit.html');    }    #竞拍中奖处理    function opencod(){        if(!isset($_POST['queue'])){ die(); }        set_time_limit(0);        //队列参数        $params = array(            'queue' => 'queue_opencod', #队列变量名            'size'  => 1, #单次执行条数            'msg'   => $this->L['unit_pay'].'开奖处理完毕', #执行完毕提示        );        //返回数据        $result = array(            'error' => 0, #error错误代码            'head'  => '<a href="javascript:;" onclick="cron.init(\'opencod\')">'+$this->L['unit_pay']+'开奖中...</a>', #head队列标题            'msg'   => '', #msg当前进度任务            'size'  => 0, #size剩余条数            'count' => 0, #count处理总条数        );        $queue = $params['queue'];        $add = intval($_POST['add']);        //创建队列        if($add==1){            queue_initialize($queue);            //TODO:获取队列数据...            $start_time = strtotime(date('Y-m-d 00:00:00'));            $end_time = strtotime(date('Y-m-d 23:59:59'));            $sql = "SELECT cod FROM ###_cod ".                "WHERE addtime>=$start_time AND addtime<=$end_time ".                "ORDER BY id DESC LIMIT 1";            $cod = $this->db->getstr($sql);            if($cod){                $logList = $this->timing->codList();                foreach($logList AS $v){                    $v['cod_true'] = $cod;                    queue_enqueue($queue, $v['log_id'], $v);                }            }            $result['count'] = queue_size($queue);        }        //队列执行中...        if(queue_size($queue)>0){            for($i=0;$i<$params['size'];$i++){                $id = queue_dequeue($queue);                $v = queue_peek_vals($queue);                $ext_info = unserialize($v['ext_info']);                $v = array_merge($v, $ext_info);                $status = $this->timing->isCod($v['cod_true'], $v);                $data = array(                    'status' => $status,                    'cod_time' => RUN_TIME,                    'cod_true' => $v['cod_true'],                    'win'      => $v['win'],                );                $this->db->update('auction_log',$data,array('log_id'=>$id));                if($status==1){                    $this->smarty->assign('username',$v['username']);                    $this->smarty->assign('goodsname',$v['title']);                    #发送中奖短信                    if($this->common['sms_open']==1 && statusTpl('sms_cod')){                        $this->load->library('sms');                        $ret = $this->sms->sendSmsTpl($v['mobile'], 'sms_cod');                    }                    #发送中奖邮件                    if($v['email']){                        $this->load->library('mail');                        $this->mail->sendMailTpl($v['email'],'mail_cod');                    }                }                //TODO:队列单元执行...                $result['msg'] .= '<p>正在处理出价ID：'.$id.'</p>';            }            $result['error'] = 0000;            $result['size'] = queue_size($queue);        }        //队列执行完成        else{            queue_destroy($queue);            $result['error'] = 1002;            $result['msg'] = $params['msg'];        }        die(json_encode($result));    }    #ajax批量解冻    function frozen(){        if(!isset($_POST['queue'])){ die(); }        set_time_limit(0);        //队列参数        $params = array(            'queue' => 'queue_frozen', #队列变量名            'size'  => 1, #单次执行条数            'msg'   => '批量解冻执行完毕', #执行完毕提示        );        //返回数据        $result = array(            'error' => 0, #error错误代码            'head'  => '<a href="javascript:;" onclick="cron.init(\'frozen\')">'+$this->L['unit_pay']+'批量解冻...</a>', #head队列标题            'msg'   => '', #msg当前进度任务            'size'  => 0, #size剩余条数            'count' => 0, #count处理总条数        );        $queue = $params['queue'];        $add = intval($_POST['add']);        $this->load->model('member');        $this->load->model('auction');        //创建队列        if($add==1){            queue_initialize($queue);            //TODO:获取队列数据...            $list = $this->auction->logList($this->frozenNum,1,0,0,'frozen',array('order'=>'a.log_id ASC','fields'=>'g.deposit,g.type'));            $act_user_ids = ',';            foreach($list as $v){                #排除竞拍模式下最高出价者出价记录                if(strpos($act_user_ids,','.$v['act_id'].'|'.$v['bid_user'].',') !== false){ continue; }                elseif(strpos($act_user_ids,','.$v['act_id'].'|') === false && $v['type'] == 1){                    $sql = "SELECT bid_user FROM ###_auction_log WHERE act_id = ".$v['act_id']." ORDER BY log_id DESC LIMIT 1";                    $bid_user = $this->db->getstr($sql);                    $act_user_ids .= $v['act_id'].'|'.$bid_user.',';                    if($v['bid_user']==$bid_user) continue;                }                queue_enqueue($queue, $v['log_id']);            }            $result['count'] = queue_size($queue);            if($result['count']>0){                admin_log('批量解冻'.$this->L['unit_baozheng']);            }        }        //队列执行中...        if(queue_size($queue)>0){            for($i=0;$i<$params['size'];$i++){                $id = queue_dequeue($queue);                //TODO:队列单元执行...                #修改解冻状态                $log = $this->db->get("SELECT * FROM ###_auction_log WHERE log_id=".$id." AND frozen=0");                if($log){                    $acti = $this->db->get("SELECT * FROM ###_goods_activity WHERE act_id=".$log['act_id']);                    $this->db->update('auction_log',array('frozen'=>1),array('log_id'=>$id,'frozen'=>0));                    #恢复保证金                    $this->member->accountlog(ACT_AUCTION,array(                        'user_money'   => $acti['deposit'],                        'frozen_money' => (-1)*$acti['deposit'],                        'mid'          => $log['bid_user'],                        'desc'         => "批量解冻".$this->L['unit_pay'].$this->L['unit_baozheng']."（".$this->L['unit_pay']."商品ID：".$log['act_id']."）",                    ));                }                $result['msg'] .= '<p>正在解冻出价ID：'.$id.'</p>';            }            $result['error'] = 0000;            $result['size'] = queue_size($queue);        }        //队列执行完成        else{            queue_destroy($queue);            $result['error'] = 1002;            $result['msg'] = $params['msg'];        }        die(json_encode($result));    }    #清除整站缩略图队列    function thumb(){        if(!isset($_POST['queue'])){ die(); }        set_time_limit(0);        //队列参数        $params = array(            'queue' => 'queue_thumb', #队列变量名            'size'  => 1, #单次执行条数            'msg'   => '整站缩略图清除完成', #执行完毕提示        );        //返回数据        $result = array(            'error' => 0, #error错误代码            'head'  => '<a href="javascript:;" onclick="cron.init(\'thumb\')">清除整站缩略图...</a>', #head队列标题            'msg'   => '', #msg当前进度任务            'size'  => 0, #size剩余条数            'count' => 0, #count处理总条数        );        $queue = $params['queue'];        $add = intval($_POST['add']);        $gallery = 'upload/images/gallery/';        $path= WebDir.$gallery;        //创建队列        if($add==1){            queue_initialize($queue);            //TODO:获取队列数据...            $this->load->library('dir');            //媒体库缩略图            $list = $this->dir->dir_list($path);            foreach($list as $k=>$v){                //屏蔽目录与非前台生成的缩略图                if(strpos($v,'.')===false || strpos($v,'_src.')!==false || strpos($v,'_middle.')!==false || strpos($v,'_thumb.')!==false){                    unset($list[$k]);                    continue;                }                $list[$k] = $v;            }            //二维码            $list += $this->dir->dir_list(WebDir.'upload/images/qrcode/');            foreach($list AS $k=>$v){                queue_enqueue($queue, $k, $v);            }            $result['count'] = queue_size($queue);        }        //队列执行中...        if(queue_size($queue)>0){            for($i=0;$i<$params['size'];$i++){                $id = queue_dequeue($queue);                $v = queue_peek_vals($queue);                if(is_file($v)){                    @unlink($v);                }                //TODO:队列单元执行...                $result['msg'] .= '<p>'.str_replace($path,'/',$v).'</p>';            }            $result['error'] = 0000;            $result['size'] = queue_size($queue);        }        //队列执行完成        else{            queue_destroy($queue);            $result['error'] = 1002;            $result['msg'] = $params['msg'];        }        die(json_encode($result));    }    #生成云购缓存队列    function yunCache(){        if(!isset($_POST['queue'])){ die(); }        set_time_limit(0);        //队列参数        $params = array(            'queue' => 'queue_yunCache', #队列变量名            'size'  => 1, #单次执行条数            'msg'   => '云购商品缓存生成完毕', #执行完毕提示        );        //返回数据        $result = array(            'error' => 0, #error错误代码            'head'  => '<a href="javascript:;" onclick="cron.init(\'thumb\')">生成云购缓存...</a>', #head队列标题            'msg'   => '', #msg当前进度任务            'size'  => 0, #size剩余条数            'count' => 0, #count处理总条数        );        $queue = $params['queue'];        $add = intval($_POST['add']);        //创建队列        if($add==1){            queue_initialize($queue);            //TODO:获取队列数据...            //获取所有云购商品ID            $sql = "SELECT buy_id FROM ###_yunbuy WHERE is_show=1 AND end_num<=0 AND is_off=0 ORDER BY buy_id ASC";            $list = $this->db->select($sql);            foreach($list AS $k=>$v){                if(!$v['buy_id']) continue;                queue_enqueue($queue, $k, $v);            }            $result['count'] = queue_size($queue);        }        //队列执行中...        if(queue_size($queue)>0){            $this->load->model('yunbuy');            for($i=0;$i<$params['size'];$i++){                $id = queue_dequeue($queue);                $v = queue_peek_vals($queue);                if($this->yunbuy->cacheYunInfo($v['buy_id'], 6) === false){                    $this->yunbuy->cacheYunInfo($v['buy_id'], 2);                }                //TODO:队列单元执行...                $result['msg'] .= '<p>生成云购ID：'.$v['buy_id'].'</p>';            }            $result['error'] = 0000;            $result['size'] = queue_size($queue);        }        //队列执行完成        else{            queue_destroy($queue);            $result['error'] = 1002;            $result['msg'] = $params['msg'];        }        die(json_encode($result));    }    #清理数据库    function clear(){        //演示站屏蔽此功能        if(in_array(AuthKey,array('G5isCnoIxwJAeSsM','XEy3zt9PfeBLyuCT','mfnyQoE9m5MJ9QM0','bECeR9b6j8fy8Qab','pmB0d0aDdwBd16QT4fpx','J7llbQO4t64Po5g56fII'))){            exit('演示站已禁用此功能！');        }        //判断清理日志        $data = $this->base->read_static_cache('clear', '');        if($data !== false){            exit('已清理过数据，请先删除清理日志文件！');        }        //清除二维码图片缓存        $this->load->library('dir');        $list = $this->dir->dir_list(WebDir.'upload/images/qrcode/');        foreach($list AS $k=>$v){            if(is_file($v)){ @unlink($v); }        }        //重置管理员（第二次不再清理）        $this->db->delete('m_user', '1=1');        $this->db->save('m_user', array(            'username' => 'admin',            'password' => '59b792ac39f91783efc1be276ca4205b',            'salt' => '613666',            'group_id' => '1',            'desc' => '系统管理员',        ));        //参拍人次清零        $this->base->write_static_cache('bidcount', array('logCount'=>'0'), '');        //清除一些配置（第二次不再清理）        $this->db->save('config',array('value' => 0),'',array('varname'=>'logCount'));        $this->db->save('config',array('value' => ''),'',array('varname'=>'sms_username'));        $this->db->save('config',array('value' => ''),'',array('varname'=>'sms_password'));        //清理数据库        #第二次不再清理        $this->db->delete('article', '1=1');        $this->db->delete('express', '1=1');        $this->db->delete('brand', '1=1');        $this->db->delete('goods', '1=1');        $this->db->delete('links', '1=1');        $this->db->delete('m_user_log', '1=1');        #会员及相关数据        $this->db->delete('member', '1=1');        $this->db->delete('member_account', '1=1');        $this->db->delete('member_address', '1=1');        $this->db->delete('member_bankcard', '1=1');        $this->db->delete('member_bonus', '1=1');        $this->db->delete('member_fri', '1=1');        $this->db->delete('member_login_log', '1=1');        $this->db->delete('member_other', '1=1');        $this->db->delete('member_visit', '1=1');        $this->db->delete('account_log', '1=1');        $this->db->delete('award_ivt', '1=1');        $this->db->delete('comment', '1=1');        $this->db->delete('commission', '1=1');        $this->db->delete('gbook', '1=1');        $this->db->delete('sms', '1=1');        $this->db->delete('mail', '1=1');        $this->db->delete('usecode_log', '1=1');        $this->db->delete('verify_code', '1=1');        $this->db->delete('verify_idcard', '1=1');        $this->db->delete('signin', '1=1');        $this->db->delete('voice', '1=1');        $this->db->delete('share', '1=1');        $this->db->delete('msg', '1=1');        $this->db->delete('cart', '1=1');        $this->db->delete('withdraw_commission', '1=1');        $this->db->delete('sharecode', '1=1');        $this->db->delete('pay_log', '1=1');        $this->db->delete('plate_log', '1=1');        #云购及相关数据        $this->db->delete('yunbuy', '1=1');        $this->db->delete('yuncart', '1=1');        $this->db->delete('yundb', '1=1');        $this->db->delete('yunorder', '1=1');        #竞拍及相关数据        $this->db->delete('goods_activity', '1=1');        $this->db->delete('auction_log', '1=1');        #订单数据        $this->db->delete('goods_order', '1=1');        $this->db->delete('goods_order_item', '1=1');        $this->db->delete('goods_order_log', '1=1');        #可多次清理的表        $this->db->delete('goods_item', '1=1');        $this->db->delete('goods_spec', '1=1');        $this->db->delete('goods_spec_item', '1=1');        $this->db->delete('cod', '1=1');        $this->db->delete('lottery', '1=1');        $this->db->delete('rec', '1=1');        $this->db->delete('search', '1=1');        $this->db->delete('send', '1=1');        //生成清理日志        admin_log('一键清理数据');        $this->base->write_static_cache('clear', array('time'=>time()),  '');        exit('0');    }    //检查更新    function checkUpdate(){        $url = 'http://auth.aiwopai.com/api/check_update_package';        $arrayJia['type'] = isset($_POST['type']) ? intval($_POST['type']) : 0;        //传送插件版本        include(AppDir.'config/version_business.php');        include(AppDir.'config/version_theme_01.php');        include(AppDir.'config/version_theme_02.php');        include(AppDir.'config/version_theme_03.php');        include(AppDir.'config/version_crowd.php');        include(AppDir.'config/version_winback.php');        include(AppDir.'config/version_quanzi.php');        include(AppDir.'config/version_virtual.php');        $arrayJia['Version_business'] = Version_business;        $arrayJia['Version_theme_01'] = Version_theme_01;        $arrayJia['Version_theme_02'] = Version_theme_02;        $arrayJia['Version_theme_03'] = Version_theme_03;        $arrayJia['Version_crowd'] = Version_crowd;        $arrayJia['Version_winback'] = Version_winback;        $arrayJia['Version_quanzi'] = Version_quanzi;        $arrayJia['Version_virtual'] = Version_virtual;        $data = $this->timing->curlPost($url, $arrayJia);        die(json_encode($data));    }    //安装更新    function installUpdate(){        if(!isset($_POST['queue'])){ die(); }        set_time_limit(0);        //队列参数        $params = array(            'queue' => 'queue_update', #队列变量名            'size'  => 1, #单次执行条数            'msg'   => '系统升级成功', #执行完毕提示        );        //返回数据        $result = array(            'error' => 0, #error错误代码            'head'  => '<a href="javascript:;" onclick="cron.init(\'update\')">系统升级...</a>', #head队列标题            'msg'   => '', #msg当前进度任务            'size'  => 0, #size剩余条数            'count' => 0, #count处理总条数        );        $queue = $params['queue'];        $add = intval($_POST['add']);        //远程路径/临时路径        $src = $_POST['query']['pack']['src'];        $info = pathinfo($src);        $savePath = AppDir.'data/'.md5($info['filename']).'.'.$info['extension'];        //创建队列        if($add==1){            queue_initialize($queue);            //生成安装过程            $list = array(                array('key'=>'start','title'=>'检查更新中...'),                array('key'=>'download_start','title'=>'下载更新包...'),                array('key'=>'download','title'=>'下载更新包...'),                array('key'=>'unzip','title'=>'安装更新包...'),                array('key'=>'installDb','title'=>'安装数据库...'),                array('key'=>'clear','title'=>'清除缓存...'),            );            foreach($list AS $k=>$v){                queue_enqueue($queue, $k, $v);            }            $result['count'] = queue_size($queue);        }        //队列执行中...        if(queue_size($queue)>0){            for($i=0;$i<$params['size'];$i++){                $id = queue_dequeue($queue);                $v = queue_peek_vals($queue);                if($v['key'] == 'download'){                    //下载更新包                    $content = file_get_contents($src);                    file_put_contents($savePath, $content, true);                    if(!is_file($savePath)){                        queue_destroy($queue);                        $result['error'] = 1001;                        $result['msg'] = '更新包下载失败！';                        die(json_encode($result));                    }                }elseif($v['key'] == 'unzip'){                    //解压并安装更新包                    $zip = new ZipArchive;                    if(!isset($zip->status)){                        if(is_file($savePath)){ @unlink($savePath); }                        queue_destroy($queue);                        $result['error'] = 1001;                        $result['msg'] = '请先开启php_zip扩展！';                        die(json_encode($result));                    }else{                        $res = $zip->open($savePath);                        //如果打开成功                        if ($res === TRUE) {                            $zip->extractTo(RootDir);                        } else {                            //输出出错的代码                        }                        $zip->close();                        if(is_file($savePath)){ @unlink($savePath); }                    }                }elseif($v['key'] == 'installDb'){                    $this->load->model('databases');                    $this->databases->updateDb();                }elseif($v['key'] == 'clear'){                    $this->base->clear_caches();                }                $result['msg'] .= '<p>'.$v['title'].'</p>';            }            $result['error'] = 0000;            $result['size'] = queue_size($queue);        }        //队列执行完成        else{            queue_destroy($queue);            $result['error'] = 1002;            $result['msg'] = $params['msg'];            //写入日志            admin_log('系统升级至版本：'.Version);        }        die(json_encode($result));    }}